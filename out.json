{
  "chunks": [
    {
      "id": "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 1,
      "end_line": 3,
      "content": "# ------------------------------------------------------\n# Stage 1: Build and install Go + tools\n# ------------------------------------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394"
      ],
      "token_count": 38
    },
    {
      "id": "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 4,
      "end_line": 4,
      "content": "  ARG GO_VERSION=1.24.0",
      "language": "dockerfile",
      "related_chunks": [
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f"
      ],
      "token_count": 5
    },
    {
      "id": "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 5,
      "end_line": 6,
      "content": "  FROM golang:${GO_VERSION} AS build\n  ",
      "language": "dockerfile",
      "symbols": [
        "stage:build"
      ],
      "related_chunks": [
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3"
      ],
      "token_count": 9
    },
    {
      "id": "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 7,
      "end_line": 15,
      "content": "  RUN  go install -v github.com/air-verse/air@latest \\\n    \u0026\u0026 go install -v github.com/aurc/loggo@latest \\\n    \u0026\u0026 go install -v mvdan.cc/gofumpt@latest \\\n    \u0026\u0026 go install -v golang.org/x/tools/cmd/goimports@latest \\\n    \u0026\u0026 go install -v golang.org/x/tools/gopls@latest\n  \n  # ------------------------------------------------------\n  # Stage 2: Final devcontainer image\n  # ------------------------------------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805"
      ],
      "token_count": 107
    },
    {
      "id": "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 16,
      "end_line": 17,
      "content": "  FROM mcr.microsoft.com/devcontainers/base:ubuntu\n  ",
      "language": "dockerfile",
      "related_chunks": [
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb"
      ],
      "token_count": 13
    },
    {
      "id": "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 18,
      "end_line": 18,
      "content": "  ARG AWS_CLI_VERSION=2.23.5",
      "language": "dockerfile",
      "related_chunks": [
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2"
      ],
      "token_count": 7
    },
    {
      "id": "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 19,
      "end_line": 19,
      "content": "  ARG AWS_CDK_VERSION=2.177.0",
      "language": "dockerfile",
      "related_chunks": [
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50"
      ],
      "token_count": 7
    },
    {
      "id": "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 20,
      "end_line": 20,
      "content": "  ARG NODE_VERSION=22.13.1",
      "language": "dockerfile",
      "related_chunks": [
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892"
      ],
      "token_count": 6
    },
    {
      "id": "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 21,
      "end_line": 22,
      "content": "  ARG PYTHON_VER=3.10\n  ",
      "language": "dockerfile",
      "related_chunks": [
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe"
      ],
      "token_count": 6
    },
    {
      "id": "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 23,
      "end_line": 23,
      "content": "  ENV AWS_CLI_VERSION=${AWS_CLI_VERSION}",
      "language": "dockerfile",
      "related_chunks": [
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892"
      ],
      "token_count": 10
    },
    {
      "id": "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 24,
      "end_line": 24,
      "content": "  ENV AWS_CDK_VERSION=${AWS_CDK_VERSION}",
      "language": "dockerfile",
      "related_chunks": [
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d"
      ],
      "token_count": 10
    },
    {
      "id": "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 25,
      "end_line": 25,
      "content": "  ENV NODE_VERSION=${NODE_VERSION}",
      "language": "dockerfile",
      "related_chunks": [
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36"
      ],
      "token_count": 8
    },
    {
      "id": "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 26,
      "end_line": 28,
      "content": "  ENV PYTHON_VER=${PYTHON_VER}\n  \n  # [NEW] Dependencies for Homebrew (Linuxbrew)",
      "language": "dockerfile",
      "related_chunks": [
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3"
      ],
      "token_count": 20
    },
    {
      "id": "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 29,
      "end_line": 49,
      "content": "  RUN apt-get update \\\n    \u0026\u0026 apt-get install -y --no-install-recommends \\\n    ca-certificates \\\n    curl \\\n    gnupg \\\n    lsb-release \\\n    unzip \\\n    vim \\\n    inotify-tools \\\n    iputils-ping \\\n    socat \\\n    fswatch \\\n    expect \\\n    build-essential \\\n    file \\\n    git \\\n    \u0026\u0026 rm -rf /var/lib/apt/lists/*\n  \n  # ----------------------------\n  # Install Docker CLI + Docker Compose plugin\n  # ----------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5"
      ],
      "token_count": 107
    },
    {
      "id": "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 50,
      "end_line": 60,
      "content": "  RUN sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg \\\n    | gpg --dearmor --batch --yes -o /usr/share/keyrings/docker-archive-keyring.gpg \\\n    \u0026\u0026 echo \"deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] \\\n    https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable\" \\\n    \u003e /etc/apt/sources.list.d/docker.list \\\n    \u0026\u0026 apt-get update \\\n    \u0026\u0026 apt-get install -y docker-ce-cli docker-compose-plugin\n  \n  # ----------------------------\n  # Install AWS CLI v2\n  # ----------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe"
      ],
      "token_count": 140
    },
    {
      "id": "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 61,
      "end_line": 70,
      "content": "  RUN cd /tmp \\\n    \u0026\u0026 curl -sSL \"https://awscli.amazonaws.com/awscli-exe-linux-x86_64-${AWS_CLI_VERSION}.zip\" -o awscliv2.zip \\\n    \u0026\u0026 unzip awscliv2.zip \\\n    \u0026\u0026 ./aws/install \\\n    \u0026\u0026 rm -rf ./aws* \\\n    \u0026\u0026 cd -\n  \n  # ----------------------------\n  # Install Python\n  # ----------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7"
      ],
      "token_count": 75
    },
    {
      "id": "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 71,
      "end_line": 76,
      "content": "  RUN apt-get update \\\n    \u0026\u0026 apt-get install -y python${PYTHON_VER} python${PYTHON_VER}-venv python${PYTHON_VER}-dev \\\n    \u0026\u0026 ln -sf /usr/bin/python${PYTHON_VER} /usr/local/bin/python \\\n    \u0026\u0026 rm -rf /var/lib/apt/lists/*\n  \n  # Add the 'vscode' user to the 'docker' group",
      "language": "dockerfile",
      "related_chunks": [
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd"
      ],
      "token_count": 68
    },
    {
      "id": "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 77,
      "end_line": 82,
      "content": "  RUN groupadd docker \\\n    \u0026\u0026 usermod -aG docker vscode\n  \n  # ----------------------------\n  # Install FNM and Node.js\n  # ----------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8"
      ],
      "token_count": 38
    },
    {
      "id": "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 83,
      "end_line": 83,
      "content": "  RUN curl -fsSL https://fnm.vercel.app/install | bash -s -- --install-dir /usr/local/fnm/bin --skip-shell",
      "language": "dockerfile",
      "related_chunks": [
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3"
      ],
      "token_count": 26
    },
    {
      "id": "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 84,
      "end_line": 84,
      "content": "  ENV FNM_DIR=/usr/local/fnm",
      "language": "dockerfile",
      "related_chunks": [
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8"
      ],
      "token_count": 7
    },
    {
      "id": "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 85,
      "end_line": 85,
      "content": "  ENV PATH=/usr/local/fnm/bin:${PATH}",
      "language": "dockerfile",
      "related_chunks": [
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5"
      ],
      "token_count": 9
    },
    {
      "id": "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 86,
      "end_line": 86,
      "content": "  RUN fnm install ${NODE_VERSION} \u0026\u0026 fnm default ${NODE_VERSION}",
      "language": "dockerfile",
      "related_chunks": [
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "c2ffa7fc637aeb3f2c008baee86d1aefe26cd85cba237daf050116e3544bd3a5",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805"
      ],
      "token_count": 16
    },
    {
      "id": "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 87,
      "end_line": 91,
      "content": "  ENV PATH=/usr/local/fnm/aliases/default/bin:${PATH}\n  \n  # ----------------------------\n  # Install AWS CDK\n  # ----------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a"
      ],
      "token_count": 35
    },
    {
      "id": "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 92,
      "end_line": 96,
      "content": "  RUN npm install -g aws-cdk@${AWS_CDK_VERSION} \n  \n  # ------------------------------------------------------\n  # Install Homebrew (Linuxbrew), jless\n  # ------------------------------------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd"
      ],
      "token_count": 52
    },
    {
      "id": "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 97,
      "end_line": 102,
      "content": "  RUN /bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\" \\\n    \u0026\u0026 echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' \u003e\u003e /etc/bash.bashrc \\\n    \u0026\u0026 eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\" \\\n    \u0026\u0026 brew install jless \n  \n  # Make brew, jless, and fx available to the 'vscode' shell environment",
      "language": "dockerfile",
      "related_chunks": [
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a"
      ],
      "token_count": 90
    },
    {
      "id": "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 103,
      "end_line": 108,
      "content": "  RUN echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' \u003e\u003e /home/vscode/.bashrc \\\n    \u0026\u0026 echo 'eval \"$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)\"' \u003e\u003e /home/vscode/.zshrc\n  \n  # --------------------------------------------------------\n  # Copy Go toolchain \u0026 installed binaries from build stage\n  # --------------------------------------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7"
      ],
      "token_count": 92
    },
    {
      "id": "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 109,
      "end_line": 109,
      "content": "  COPY --from=build /usr/local/go/ /usr/local/go/",
      "language": "dockerfile",
      "related_chunks": [
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "03f5c9e6c412020c0b9b202faee38a312763685c879253f4ce73a7b8bc2e4b54",
        "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d"
      ],
      "token_count": 12
    },
    {
      "id": "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 110,
      "end_line": 110,
      "content": "  COPY --from=build /go /go",
      "language": "dockerfile",
      "related_chunks": [
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8"
      ],
      "token_count": 6
    },
    {
      "id": "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 111,
      "end_line": 113,
      "content": "  RUN chown -R vscode:vscode /go\n  \n  # Add Go to path",
      "language": "dockerfile",
      "related_chunks": [
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "2e42594ed9602411dca8dc1dcc4e5cb0d1c9736201072e13bc9e8d0361a8514b",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "b96135b101c9240fceabb802f1ea993c7ad61f1d09678e954a48ba99b00ba39f",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "99b85c2cc1d4db300d6cd382797bfc1a712901015b7888f77d1fcae1cf1b75fd",
        "8fd25b3d068c7433e8ecd2748522a13381615708634fd76e25a5ade3c6495d8a"
      ],
      "token_count": 13
    },
    {
      "id": "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 114,
      "end_line": 114,
      "content": "  ENV GOPATH=/go",
      "language": "dockerfile",
      "related_chunks": [
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "bc596e5bda7dc6a28e820431e62d314583ceffa0b74ff50c33d94159169f6af7",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2"
      ],
      "token_count": 4
    },
    {
      "id": "cf3925c6f511eb88015e8d7191f47fc87c6ef570abff4a326f551db0142ccbbc",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 115,
      "end_line": 119,
      "content": "  ENV PATH=/usr/local/go/bin:/go/bin:$PATH\n  \n  # ------------------------------------------------------\n  # Setup Workspace\n  # ------------------------------------------------------",
      "language": "dockerfile",
      "related_chunks": [
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
        "7ce5abfb3391ebb0c36b28f2cdf096c205291886579c8a76b21986450376b549",
        "c16f9307f8f52f7ef82dcf39d15e3e71e1f50c144f141d0a9d5e50a99ea61346",
        "797950caa1907006bcc18588590208f66ac2af7873847644e55b9831532138b8",
        "8fcc751c14bfef7021eaefea8f7ae4956bdab0aa0f00d2a61a485422a7e0f0fb",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d"
      ],
      "token_count": 45
    },
    {
      "id": "2dc8e7e4addcb29db370b0f37c4e9aa5c860f24d9619f48856d1d04a9cc966b2",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 120,
      "end_line": 121,
      "content": "  WORKDIR /workspace\n  ",
      "language": "dockerfile",
      "related_chunks": [
        "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
        "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805",
        "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "7ac91817d748d88327fa1eb8673d72987d953e93b5aeefd8311f2e843d3ebf91",
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "a51b3f0a8e0646a94945a0bb639848cbc886ac4189a3d30f1eee4801c42817fc",
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892"
      ],
      "token_count": 5
    },
    {
      "id": "58af239b3ce0814cee3a8f6002a717f490d14b4209a0b74a1c519af08daf58e8",
      "file_path": "/workspace/.devcontainer/Dockerfile",
      "start_line": 122,
      "end_line": 125,
      "content": "  RUN ln -s /workspace/.scripts/alias.sh /home/vscode/alias.sh \\\n    \u0026\u0026 echo \"source /home/vscode/alias.sh\" \u003e\u003e /home/vscode/.bashrc \\\n    \u0026\u0026 echo \"source /home/vscode/alias.sh\" \u003e\u003e /home/vscode/.zshrc\n  ",
      "language": "dockerfile",
      "related_chunks": [
        "7eb66f1aa2cada3db01c384578735ae25ca445679173c312e2207f07862edb98",
        "873a3deabdf867345231800a4c3adf48ccd9418f189a3e8a95c46a53674307c3",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e",
        "d52927d3d74786eed07d055d61f341f7cc00d55bf0b8b46cc97eb5d16fe9c58d",
        "f22102676d011ddbed825e24f4694f15f23e7380c84b00a1cdf5e86a47a7eb48",
        "abe5edf406241d892f7b9f7f9a0b9893aedd769813ed6dfedcca7102d0aad394",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "c0a6d03b59291adf5c719f096e15a8a3526fb8c831d025bd9ef0897dbc7f83a0",
        "88236af37b5a977e562c18a65ef7f566d41299e9085f8b62c3d78e02f2892e3a"
      ],
      "token_count": 50
    },
    {
      "id": "d039de5eb888da9487951f762a6907864b9fce8878e6cfd88314ba467d2b96dd",
      "file_path": "/workspace/.devcontainer/devcontainer.json",
      "start_line": 1,
      "end_line": 41,
      "content": "{\n    \"name\": \"chunk\",\n    \"workspaceFolder\": \"/workspace\",\n    \"dockerComposeFile\": \"../docker-compose.yml\",\n    \n    \"service\": \"devcontainer\",\n    \"customizations\": {\n      \"vscode\": {\n        \"settings\": {\n          \"files.autoSave\": \"onFocusChange\",\n          \"go.lintTool\": \"golangci-lint\",\n          \"go.lintFlags\": [\n            \"--fast\"\n          ],\n          \"go.lintOnSave\": \"package\",\n          \"go.useLanguageServer\": true,\n          \"gopls\": {\n            \"formatting.gofumpt\": true\n          },\n          \"remote.localPortHost\": \"allInterfaces\"\n        },\n        \"extensions\": [\n          \"golang.go\",\n          \"ms-azuretools.vscode-docker\",\n          \"ms-vscode.aws-toolkit\",\n          \"AmazonWebServices.aws-toolkit-vscode\",\n          \"yzhang.markdown-all-in-one\",\n          \"usernamehw.errorlens\",\n          \"formulahendry.auto-rename-tag\",\n          \"esbenp.prettier-vscode\",\n          \"bradlc.vscode-tailwindcss\",\n          \"tabnine.tabnine-vscode\"\n        ]\n      }\n    },\n    \"mounts\": [\n      \"source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind\",\n      \"source=${localEnv:HOME}/.aws,target=/home/vscode/.aws,type=bind,consistency=cached\",\n      \"source=${localEnv:HOME}/.ssh,target=/home/vscode/.ssh,type=bind,consistency=cached\"\n    ]\n  }",
      "language": "json",
      "related_chunks": [
        "e4b1098f3ec1010519cd1a6bdb3395bb33f5713c2d9d92c82e73303ec704c1fd",
        "ef05880479d90ecfa670e0689ba4069d78866d9e48a4823f635b6314272a4892",
        "cf42f6e572e7a25cb2ca385db743e5f1f13ae80707e6ae28a1028bc35fd72ed7",
        "1f6041714e0dd5d8ee69bde8deec0e0cb1ba587f344056409d1b527ec71095a5",
        "f4c5d06c8e5f62cb5fddb37fe98fcb3c4ae1e2a4875ed12c720b7acdd2c4ffbe",
        "5d3fdec2dd924ed9bdc8130753d1c00744d06b4642928750fa67842746c9c74d",
        "05665ffe0b528bd8819821acfec0e7e9fe075dda6bc92520a67f4de9460fab50",
        "e1f998702ee36d84ff74683981d0efa16e4a7c813dc2091d91629e1b1481be36",
        "4f2c7e1b720c4f275e65b25d6b95956fd83276dba2494ea5ac5b9178711f7805",
        "6b7bce20e1c170ef6a801dd5d47c47ba2a3004b7149900a6ad5b72bdcd011d2e"
      ],
      "token_count": 319
    },
    {
      "id": "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
      "file_path": "/workspace/.gitignore",
      "start_line": 1,
      "end_line": 6,
      "content": "**/node_modules/\n**/cdk.out/\n.env\nchunk\nchunks.json\nout.json",
      "language": "gitignore",
      "related_chunks": [
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0"
      ],
      "token_count": 15
    },
    {
      "id": "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
      "file_path": "/workspace/.prettierrc.json",
      "start_line": 1,
      "end_line": 8,
      "content": "{\n    \"semi\": true,\n    \"trailingComma\": \"all\",\n    \"singleQuote\": true,\n    \"printWidth\": 120,\n    \"tabWidth\": 2,\n    \"plugins\": [\"prettier-plugin-tailwindcss\"]\n  }",
      "language": "json",
      "related_chunks": [
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c"
      ],
      "token_count": 41
    },
    {
      "id": "0698642335806583d54d186e45523c9fd8b77be258c0a557aa35841aef10cdd2",
      "file_path": "/workspace/.scripts/alias.sh",
      "start_line": 1,
      "end_line": 16,
      "content": "#!/bin/zsh\n\neval \"$(dircolors -b)\"\nexport LS_OPTIONS='--color=auto'\nalias ls='ls $LS_OPTIONS'\nalias l='ls $LS_OPTIONS -lA'\nalias ll='ls $LS_OPTIONS -laFh '\n\nalias gotest='$(git rev-parse --show-toplevel)/.scripts/gotest.sh \"$@\"'\nalias gorun='while inotifywait -r -e close_write /workspace/monorepo ; do go run . | jq '.'; done'\nalias xclip='socat - tcp:host.docker.internal:8121'\nalias srctree='tree -d -a -I \"cdk.out\" -I \"node_modules\" -I \".git\" -I \".angular\" -I \"dist\"'\nalias rt='git rev-parse --show-toplevel'\nalias lgd='unbuffer aws logs tail \"/aws/lambda/huddle-websocket-default\" --follow --format short |  unbuffer -p cut -d \" \" -f 2- | loggo stream -t /workspace/loggo.fmt'\n\n",
      "language": "shell",
      "related_chunks": [
        "c8c4d773951059a23ba1fd0b9af8e986ace50e444e6c23565ab941c956a276e7"
      ],
      "token_count": 170
    },
    {
      "id": "c8c4d773951059a23ba1fd0b9af8e986ace50e444e6c23565ab941c956a276e7",
      "file_path": "/workspace/.scripts/gotest.sh",
      "start_line": 1,
      "end_line": 8,
      "content": "#!/bin/zsh\n\nroot=$(git rev-parse --show-toplevel)\ngo_dirs=\"${root}/cdk ${root}/cmd ${root}/pkg ${root}/internal\"\n\ndiv=\"\\n************************************************************\\n\"\nwhile inotifywait -r -e modify,create,delete $root ; do echo $div \u0026\u0026 go test ./... \"$@\"; done\n",
      "language": "shell",
      "related_chunks": [
        "0698642335806583d54d186e45523c9fd8b77be258c0a557aa35841aef10cdd2"
      ],
      "token_count": 69
    },
    {
      "id": "aa9ef6813291595100c304a7b02032ab6e264843124dd48bd64fb4a80d2113c3",
      "file_path": "/workspace/.vscode/settings.json",
      "start_line": 1,
      "end_line": 3,
      "content": "{\n    \"files.autoSave\": \"onFocusChange\"\n}",
      "language": "json",
      "token_count": 10
    },
    {
      "id": "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
      "file_path": "/workspace/LICENSE",
      "start_line": 1,
      "end_line": 22,
      "content": "MIT License\n\nCopyright (c) 2025 John Dibling\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
      "language": "",
      "related_chunks": [
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d"
      ],
      "token_count": 267
    },
    {
      "id": "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
      "file_path": "/workspace/README.md",
      "start_line": 1,
      "end_line": 50,
      "content": "# Chunk\n\nChunk is a command-line tool written in Go that recursively scans source code repositories and splits them into discrete \"chunks.\" It's designed with AI code assistance in mind, where these chunks can be embedded and stored in a vector database for Retrieval-Augmented Generation (RAG) workflows.\n\n## Features\n\n- Uses Go's robust standard library for fast and efficient file processing\n- Automatically walks directories, respecting `.gitignore` rules\n- Skips binary files and common non-source directories (node_modules, vendor, etc.)\n- Language detection based on file extensions with fallback strategies\n- Smart chunking that preserves semantic boundaries:\n  - Functions, types, and methods in Go (using AST parsing)\n  - Functions and blocks in shell scripts\n  - Stages and instructions in Dockerfiles\n  - Generic chunking for other file types\n- Cross-reference tracking to maintain relationships between code chunks\n- Rich metadata including:\n  - Stable chunk IDs that only change when content changes\n  - Symbol extraction (functions, classes, methods)\n  - Import/dependency tracking\n  - Related chunk references\n  - Token count estimates\n- Multiple output formats:\n  - `vector-ready`: Default format with related chunks (best for RAG)\n  - `json`: Standard JSON output\n  - `jsonl`: JSON Lines (one JSON object per line)\n\n## Installation\n\n```bash\ngo install github.com/stream-ai/chunk@latest\n```\n\nOr build from source:\n\n```bash\ngit clone https://github.com/stream-ai/chunk.git\ncd chunk\ngo build\n```\n\n## Usage\n\nBasic usage:\n\n```bash\nchunk --dir /path/to/codebase --output chunks.json\n```\n\nAll options:",
      "language": "md",
      "related_chunks": [
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0"
      ],
      "token_count": 403
    },
    {
      "id": "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
      "file_path": "/workspace/README.md",
      "start_line": 51,
      "end_line": 100,
      "content": "\n```bash\nchunk --dir /path/to/codebase \\\n      --output chunks.json \\\n      --format json \\\n      --min-chunk-size 10 \\\n      --max-chunk-size 100\n```\n\n### Options\n\n- `--dir`, `-d`: Directory to process (default: current directory)\n- `--output`, `-o`: Output file (use \"-\" for stdout, default)\n- `--format`, `-f`: Output format (vector-ready, json, or jsonl, default: vector-ready)\n- `--min-chunk-size`, `-m`: Minimum chunk size in lines (default: 10)\n- `--max-chunk-size`, `-M`: Maximum chunk size in lines (default: 50)\n\n## Output Format\n\nThe tool produces JSON output containing:\n\n```json\n{\n  \"chunks\": [\n    {\n      \"id\": \"e4ace233f253b08b0c8fb0b8a19f8b84a892e1c39fe46408634010fd81e17ec4\",\n      \"file_path\": \"main.go\",\n      \"start_line\": 1,\n      \"end_line\": 50,\n      \"content\": \"package main\\n\\nimport (...\",\n      \"language\": \"go\",\n      \"framework\": \"\",\n      \"symbols\": [\"main\", \"processFile\", \"NewChunker\"],\n      \"imports\": [\"fmt\", \"os\", \"path/filepath\"],\n      \"related_chunks\": [\"a8c2750dbd4fcae981d7c84a3996d30b7d252ee3038da4db7d7ea3768edd6c2b\"],\n      \"token_count\": 320\n    }\n  ]\n}\n```\n\n## Examples\n\n1. Process a Go project with the default vector-ready format:\n\n```bash\nchunk -d ./go-project -o chunks.json\n```\n\n2. Process a mixed codebase with the JSONL format:",
      "language": "md",
      "related_chunks": [
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0"
      ],
      "token_count": 320
    },
    {
      "id": "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
      "file_path": "/workspace/README.md",
      "start_line": 101,
      "end_line": 150,
      "content": "\n```bash\nchunk -d ./mixed-repo -o chunks.jsonl -f jsonl\n```\n\n3. Extract and analyze chunks using JQ:\n\n```bash\n# List all unique files\njq -r '[.chunks[].file_path] | unique | sort[]' chunks.json\n\n# Count chunks per language\njq -r '[.chunks[].language] | group_by(.) | map({language: .[0], count: length}) | sort_by(.count) | reverse[]' chunks.json\n```\n\n## Language Support\n\nChunk provides specialized chunking for:\n\n- **Go**: Uses AST parsing for accurate function, method, and type boundaries\n- **Shell Scripts**: Detects function definitions and logical blocks\n- **Dockerfiles**: Chunks based on stages and instructions\n\nOther supported languages use generic chunking:\n- JavaScript/TypeScript\n- Python, Ruby, PHP\n- Java, Kotlin, C, C++, C#, Rust\n- HTML, CSS, JSON, YAML, TOML, Markdown\n\n## Architecture\n\nChunk uses a plugin-based architecture with interfaces for:\n\n- Language detection\n- Chunking strategies\n- Output formatting\n\nThis makes it easy to extend with new languages or output formats.\n\n## Extending Chunk\n\nChunk is designed to be extensible. To add support for new languages:\n\n1. Implement the `chunker.Chunker` interface\n2. Register your implementation in `cmd/root.go`\n\nFor example:\n\n```go\n// Create a new chunker",
      "language": "md",
      "symbols": [
        "definitions",
        "2"
      ],
      "related_chunks": [
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4"
      ],
      "token_count": 306
    },
    {
      "id": "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
      "file_path": "/workspace/README.md",
      "start_line": 151,
      "end_line": 169,
      "content": "myChunker := NewMyLanguageChunker()\n\n// Register it\nchunkerRegistry.Register(myChunker)\n```\n\n## Running Tests\n\n```bash\ngo test ./...\n```\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n\n## License\n\nMIT License",
      "language": "md",
      "related_chunks": [
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19"
      ],
      "token_count": 62
    },
    {
      "id": "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 21,
      "end_line": 27,
      "content": "type rootOptions struct {\n\tDir          string\n\tOutput       string\n\tFormat       string\n\tMinChunkSize int\n\tMaxChunkSize int\n}",
      "language": "go",
      "symbols": [
        "rootOptions"
      ],
      "imports": [
        "fmt",
        "io",
        "os",
        "path/filepath",
        "github.com/spf13/cobra",
        "github.com/spf13/viper",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/internal/output",
        "github.com/stream-ai/chunk/pkg/gitignore",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
        "b83bfd97312b2fd05771ac34482813649a73d660f8b883ce34afc6c2ec427725",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "8820ce4a0c1235f0bdec21e391f082990569c6e9c31f48d83ee51abb285b666b",
        "e51924cdf33e4e29ef261042a876895b9e7ada6472a1e6643bdf27d5c3167828",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124"
      ],
      "token_count": 31
    },
    {
      "id": "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 30,
      "end_line": 56,
      "content": "func NewRootCommand() *cobra.Command {\n\topts := \u0026rootOptions{}\n\n\t// Create command\n\tcmd := \u0026cobra.Command{\n\t\tUse:   \"chunk\",\n\t\tShort: \"Chunk splits code files into discrete chunks for AI analysis\",\n\t\tLong: `Chunk is a tool that recursively scans a source tree and splits code files into \ndiscrete chunks for AI code assistance and RAG workflows. It supports various languages\nand frameworks, respects .gitignore rules, and provides rich metadata for vector databases.`,\n\t\tRunE: func(cmd *cobra.Command, args []string) error {\n\t\t\treturn runChunk(opts)\n\t\t},\n\t}\n\n\t// Add flags\n\tcmd.Flags().StringVarP(\u0026opts.Dir, \"dir\", \"d\", \".\", \"Directory to process\")\n\tcmd.Flags().StringVarP(\u0026opts.Output, \"output\", \"o\", \"-\", \"Output file (- for stdout)\")\n\tcmd.Flags().StringVarP(\u0026opts.Format, \"format\", \"f\", \"vector-ready\", \"Output format (vector-ready, json, or jsonl)\")\n\tcmd.Flags().IntVarP(\u0026opts.MinChunkSize, \"min-chunk-size\", \"m\", 10, \"Minimum chunk size in lines\")\n\tcmd.Flags().IntVarP(\u0026opts.MaxChunkSize, \"max-chunk-size\", \"M\", 50, \"Maximum chunk size in lines\")\n\n\t// Bind flags to viper\n\tviper.BindPFlags(cmd.Flags())\n\n\treturn cmd\n}",
      "language": "go",
      "symbols": [
        "NewRootCommand"
      ],
      "imports": [
        "fmt",
        "io",
        "os",
        "path/filepath",
        "github.com/spf13/cobra",
        "github.com/spf13/viper",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/internal/output",
        "github.com/stream-ai/chunk/pkg/gitignore",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45"
      ],
      "token_count": 280
    },
    {
      "id": "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 59,
      "end_line": 98,
      "content": "func runChunk(opts *rootOptions) error {\n\t// Initialize components\n\tlangDetector := detector.NewDefaultLanguageDetector()\n\tframeworkDetector := detector.NewDefaultFrameworkDetector()\n\n\t// Initialize chunker registry\n\tchunkerRegistry := chunker.NewChunkerRegistry()\n\tchunkerRegistry.Register(chunker.NewGoChunker())\n\tchunkerRegistry.Register(chunker.NewShellChunker())\n\tchunkerRegistry.Register(chunker.NewDockerfileChunker())\n\tchunkerRegistry.Register(chunker.NewGenericChunker()) // Fallback chunker for unknown types\n\n\t// Initialize formatter registry\n\tformatterRegistry := output.NewFormatterRegistry()\n\tformatterRegistry.Register(\"json\", output.NewJSONFormatter(true))\n\tformatterRegistry.Register(\"jsonl\", output.NewJSONLinesFormatter())\n\tformatterRegistry.Register(\"vector-ready\", output.NewJSONFormatter(true))\n\n\t// Get absolute path for the root directory\n\trootDir, err := filepath.Abs(opts.Dir)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Initialize GitIgnore manager\n\tignoreManager := gitignore.NewManager(rootDir)\n\tif err := ignoreManager.LoadIgnores(); err != nil {\n\t\treturn err\n\t}\n\n\t// Process the directory\n\tresult, err := processDirectory(rootDir, opts.MinChunkSize, opts.MaxChunkSize,\n\t\topts.Format, langDetector, frameworkDetector, chunkerRegistry, ignoreManager)\n\tif err != nil {\n\t\treturn err\n\t}\n\n\t// Output the result\n\treturn outputResult(result, opts.Output, opts.Format, formatterRegistry)\n}",
      "language": "go",
      "symbols": [
        "runChunk"
      ],
      "imports": [
        "fmt",
        "io",
        "os",
        "path/filepath",
        "github.com/spf13/cobra",
        "github.com/spf13/viper",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/internal/output",
        "github.com/stream-ai/chunk/pkg/gitignore",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "9e3760a729c1098ef431742cfa84b08e63eb315c6c0619d5e5e7dd0de6ad7311",
        "6728ed6fd2b5857e05a8c25a1559adaeef2aea435bbf724733f688868f525c0a",
        "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
        "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
        "afdc215497647e6370b4605ecda70b58d151c3a7287737154c6ae091f2b73262",
        "1a5f730f07255e01c78026401d9ae05c7f2dd3ac5c388e6d2691b3536ebbfb88",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124"
      ],
      "token_count": 351
    },
    {
      "id": "6728ed6fd2b5857e05a8c25a1559adaeef2aea435bbf724733f688868f525c0a",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 101,
      "end_line": 128,
      "content": "func outputResult(\n\tresult model.ChunkResult,\n\toutputPath string,\n\tformat string,\n\tformatterRegistry *output.FormatterRegistry,\n) error {\n\t// Get the appropriate formatter\n\tformatter, exists := formatterRegistry.Get(format)\n\tif !exists {\n\t\treturn fmt.Errorf(\"unsupported format: %s\", format)\n\t}\n\n\t// Open output file or use stdout\n\tvar w io.Writer\n\tif outputPath == \"-\" {\n\t\tw = os.Stdout\n\t} else {\n\t\tfile, err := os.Create(outputPath)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tdefer file.Close()\n\t\tw = file\n\t}\n\n\t// Format and write the output\n\treturn formatter.Format(w, result)\n}",
      "language": "go",
      "symbols": [
        "outputResult"
      ],
      "imports": [
        "fmt",
        "io",
        "os",
        "path/filepath",
        "github.com/spf13/cobra",
        "github.com/spf13/viper",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/internal/output",
        "github.com/stream-ai/chunk/pkg/gitignore",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "e51924cdf33e4e29ef261042a876895b9e7ada6472a1e6643bdf27d5c3167828",
        "ecbdaa484fb1e9fc1124cd853cfaa7754d14e58c06845c9d4b400f46438d50b6",
        "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5",
        "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06"
      ],
      "token_count": 144
    },
    {
      "id": "9e3760a729c1098ef431742cfa84b08e63eb315c6c0619d5e5e7dd0de6ad7311",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 131,
      "end_line": 217,
      "content": "func processDirectory(\n\trootDir string,\n\tminChunkSize int,\n\tmaxChunkSize int,\n\tformat string,\n\tlangDetector detector.LanguageDetector,\n\tframeworkDetector detector.FrameworkDetector,\n\tchunkerRegistry *chunker.ChunkerRegistry,\n\tignoreManager *gitignore.Manager,\n) (model.ChunkResult, error) {\n\tvar result model.ChunkResult\n\tsymbolTable := model.NewSymbolTable()\n\n\t// First pass: Process all files and build chunks\n\terr := filepath.Walk(rootDir, func(path string, info os.FileInfo, err error) error {\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\t// Skip directories that should be excluded\n\t\tif info.IsDir() {\n\t\t\tdirName := info.Name()\n\t\t\tif util.ShouldSkipDirectory(dirName) {\n\t\t\t\treturn filepath.SkipDir\n\t\t\t}\n\t\t\treturn nil\n\t\t}\n\n\t\t// Check if the file should be ignored\n\t\tif ignoreManager.IsIgnored(path) {\n\t\t\treturn nil\n\t\t}\n\n\t\t// Skip binary files\n\t\tif util.IsBinaryFile(path) {\n\t\t\treturn nil\n\t\t}\n\n\t\t// Read file content\n\t\tcontent, err := os.ReadFile(path)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"error reading %s: %v\", path, err)\n\t\t}\n\n\t\t// Detect language and framework\n\t\tlanguage := langDetector.DetectLanguage(path, content)\n\t\tframework := frameworkDetector.DetectFramework(path, content, language)\n\n\t\t// Find appropriate chunker\n\t\tfileChunker := chunkerRegistry.FindChunker(path, language, framework)\n\t\tif fileChunker == nil {\n\t\t\t// Use generic chunker as fallback\n\t\t\tfileChunker = chunker.NewGenericChunker()\n\t\t}\n\n\t\t// Process the file\n\t\toptions := chunker.ChunkingOptions{\n\t\t\tMinChunkSize: minChunkSize,\n\t\t\tMaxChunkSize: maxChunkSize,\n\t\t}\n\n\t\tfileChunks, err := fileChunker.Chunk(path, content, symbolTable, options)\n\t\tif err != nil {\n\t\t\treturn fmt.Errorf(\"error processing %s: %v\", path, err)\n\t\t}\n\n\t\t// Store chunks in symbol table and results\n\t\tfor _, chunk := range fileChunks {\n\t\t\tsymbolTable.AddChunk(chunk)\n\t\t\tresult.Chunks = append(result.Chunks, chunk)\n\t\t}\n\n\t\treturn nil\n\t})\n\tif err != nil {\n\t\treturn result, err\n\t}\n\n\t// Second pass: Only for vector-ready format, add related chunks\n\tif format == \"vector-ready\" {\n\t\tfor i, chunk := range result.Chunks {\n\t\t\tresult.Chunks[i].RelatedChunks = symbolTable.FindRelatedChunks(chunk)\n\t\t}\n\t}\n\n\treturn result, nil\n}",
      "language": "go",
      "symbols": [
        "processDirectory"
      ],
      "imports": [
        "fmt",
        "io",
        "os",
        "path/filepath",
        "github.com/spf13/cobra",
        "github.com/spf13/viper",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/internal/output",
        "github.com/stream-ai/chunk/pkg/gitignore",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "820c6ee1ead0d47710c1960064c39544129ed4f91137cc9ec2a06f582cc27e6f",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
        "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3"
      ],
      "token_count": 540
    },
    {
      "id": "e32d46a2e5b260edf0067e4a6f40fe63de954aca36093cd70a8249bb8eebec77",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 3,
      "end_line": 18,
      "content": "import (\n\t\"fmt\"\n\t\"io\"\n\t\"os\"\n\t\"path/filepath\"\n\n\t\"github.com/spf13/cobra\"\n\t\"github.com/spf13/viper\"\n\n\t\"github.com/stream-ai/chunk/internal/chunker\"\n\t\"github.com/stream-ai/chunk/internal/detector\"\n\t\"github.com/stream-ai/chunk/internal/model\"\n\t\"github.com/stream-ai/chunk/internal/output\"\n\t\"github.com/stream-ai/chunk/pkg/gitignore\"\n\t\"github.com/stream-ai/chunk/pkg/util\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
        "ccd821a37b14fd9a47b53f41543ecd7d7a84ccff74a9ac87d701a4360209c249",
        "9e3760a729c1098ef431742cfa84b08e63eb315c6c0619d5e5e7dd0de6ad7311",
        "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
        "6728ed6fd2b5857e05a8c25a1559adaeef2aea435bbf724733f688868f525c0a",
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2"
      ],
      "token_count": 92
    },
    {
      "id": "ccd821a37b14fd9a47b53f41543ecd7d7a84ccff74a9ac87d701a4360209c249",
      "file_path": "/workspace/cmd/root.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package cmd",
      "language": "go",
      "symbols": [
        "cmd"
      ],
      "related_chunks": [
        "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
        "6728ed6fd2b5857e05a8c25a1559adaeef2aea435bbf724733f688868f525c0a",
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
        "9e3760a729c1098ef431742cfa84b08e63eb315c6c0619d5e5e7dd0de6ad7311",
        "e32d46a2e5b260edf0067e4a6f40fe63de954aca36093cd70a8249bb8eebec77"
      ],
      "token_count": 2
    },
    {
      "id": "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
      "file_path": "/workspace/docker-compose.yml",
      "start_line": 1,
      "end_line": 15,
      "content": "name: chunk\nservices:\n  devcontainer:\n    container_name: devcontainer\n    build:\n      context: .\n      dockerfile: .devcontainer/Dockerfile\n    volumes:\n      - ./:/workspace:rw\n    environment:\n      - AUTH0_DOMAIN=${AUTH0_DOMAIN}\n      - AUTH0_CLIENT_ID=${AUTH0_CLIENT_ID}\n    command: sleep infinity\n\n",
      "language": "yml",
      "related_chunks": [
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0"
      ],
      "token_count": 76
    },
    {
      "id": "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
      "file_path": "/workspace/go.mod",
      "start_line": 1,
      "end_line": 33,
      "content": "module github.com/stream-ai/chunk\n\ngo 1.24.0\n\nrequire (\n\tgithub.com/spf13/cobra v1.9.1\n\tgithub.com/spf13/viper v1.19.0\n)\n\nrequire (\n\tgithub.com/fsnotify/fsnotify v1.7.0 // indirect\n\tgithub.com/hashicorp/hcl v1.0.0 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/magiconair/properties v1.8.7 // indirect\n\tgithub.com/mitchellh/mapstructure v1.5.0 // indirect\n\tgithub.com/pelletier/go-toml/v2 v2.2.2 // indirect\n\tgithub.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06 // indirect\n\tgithub.com/sagikazarmark/locafero v0.4.0 // indirect\n\tgithub.com/sagikazarmark/slog-shim v0.1.0 // indirect\n\tgithub.com/sourcegraph/conc v0.3.0 // indirect\n\tgithub.com/spf13/afero v1.11.0 // indirect\n\tgithub.com/spf13/cast v1.6.0 // indirect\n\tgithub.com/spf13/pflag v1.0.6 // indirect\n\tgithub.com/subosito/gotenv v1.6.0 // indirect\n\tgo.uber.org/atomic v1.9.0 // indirect\n\tgo.uber.org/multierr v1.9.0 // indirect\n\tgolang.org/x/exp v0.0.0-20230905200255-921286631fa9 // indirect\n\tgolang.org/x/sys v0.18.0 // indirect\n\tgolang.org/x/text v0.14.0 // indirect\n\tgopkg.in/ini.v1 v1.67.0 // indirect\n\tgopkg.in/yaml.v3 v3.0.1 // indirect\n)\n",
      "language": "mod",
      "related_chunks": [
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470"
      ],
      "token_count": 288
    },
    {
      "id": "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
      "file_path": "/workspace/go.sum",
      "start_line": 1,
      "end_line": 50,
      "content": "github.com/cpuguy83/go-md2man/v2 v2.0.6/go.mod h1:oOW0eioCTA6cOiMLiUPZOpcVxMig6NIQQ7OS05n1F4g=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc h1:U9qPSI2PIWSS1VwoXQT9A3Wy9MM3WgvqSxFWenqJduM=\ngithub.com/davecgh/go-spew v1.1.2-0.20180830191138-d8f796af33cc/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/google/go-cmp v0.5.9 h1:O2Tfq5qg4qc4AmwVlvv0oLiVAGB7enBSJ2x2DqQFi38=\ngithub.com/google/go-cmp v0.5.9/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/hashicorp/hcl v1.0.0 h1:0Anlzjpi4vEasTeNFn2mLJgTSwt0+6sfsiTG8qcWGx4=\ngithub.com/hashicorp/hcl v1.0.0/go.mod h1:E5yfLk+7swimpb2L/Alb/PJmXilQ/rhwaUYs4T20WEQ=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/magiconair/properties v1.8.7 h1:IeQXZAiQcpL9mgcAe1Nu6cX9LLw6ExEHKjN0VQdvPDY=\ngithub.com/magiconair/properties v1.8.7/go.mod h1:Dhd985XPs7jluiymwWYZ0G4Z61jb3vdS329zhj2hYo0=\ngithub.com/mitchellh/mapstructure v1.5.0 h1:jeMsZIYE/09sWLaz43PL7Gy6RuMjD2eJVyuac5Z2hdY=\ngithub.com/mitchellh/mapstructure v1.5.0/go.mod h1:bFUtVrKA4DC2yAKiSyO/QUcy7e+RRV2QTWOzhPopBRo=\ngithub.com/pelletier/go-toml/v2 v2.2.2 h1:aYUidT7k73Pcl9nb2gScu7NSrKCSHIDE89b3+6Wq+LM=\ngithub.com/pelletier/go-toml/v2 v2.2.2/go.mod h1:1t835xjRzz80PqgE6HHgN2JOsmgYu/h4qDAS4n929Rs=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2 h1:Jamvg5psRIccs7FGNTlIRMkT8wgtp5eCXdBlqhYGL6U=\ngithub.com/pmezard/go-difflib v1.0.1-0.20181226105442-5d4384ee4fb2/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06 h1:OkMGxebDjyw0ULyrTYWeN0UNCCkmCWfjPnIA2W6oviI=\ngithub.com/sabhiram/go-gitignore v0.0.0-20210923224102-525f6e181f06/go.mod h1:+ePHsJ1keEjQtpvf9HHw0f4ZeJ0TLRsxhunSI2hYJSs=\ngithub.com/sagikazarmark/locafero v0.4.0 h1:HApY1R9zGo4DBgr7dqsTH/JJxLTTsOt7u6keLGt6kNQ=\ngithub.com/sagikazarmark/locafero v0.4.0/go.mod h1:Pe1W6UlPYUk/+wc/6KFhbORCfqzgYEpgQ3O5fPuL3H4=\ngithub.com/sagikazarmark/slog-shim v0.1.0 h1:diDBnUNK9N/354PgrxMywXnAwEr1QZcOr6gto+ugjYE=\ngithub.com/sagikazarmark/slog-shim v0.1.0/go.mod h1:SrcSrq8aKtyuqEI1uvTDTK1arOWRIczQRv+GVI1AkeQ=\ngithub.com/sourcegraph/conc v0.3.0 h1:OQTbbt6P72L20UqAkXXuLOj79LfEanQ+YQFNpLA9ySo=\ngithub.com/sourcegraph/conc v0.3.0/go.mod h1:Sdozi7LEKbFPqYX2/J+iBAM6HpqSLTASQIKqDmF7Mt0=\ngithub.com/spf13/afero v1.11.0 h1:WJQKhtpdm3v2IzqG8VMqrr6Rf3UYpEF239Jy9wNepM8=\ngithub.com/spf13/afero v1.11.0/go.mod h1:GH9Y3pIexgf1MTIWtNGyogA5MwRIDXGUr+hbWNoBjkY=\ngithub.com/spf13/cast v1.6.0 h1:GEiTHELF+vaR5dhz3VqZfFSzZjYbgeKDpBxQVS4GYJ0=\ngithub.com/spf13/cast v1.6.0/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.9.1 h1:CXSaggrXdbHK9CF+8ywj8Amf7PBRmPCOJugH954Nnlo=\ngithub.com/spf13/cobra v1.9.1/go.mod h1:nDyEzZ8ogv936Cinf6g1RU9MRY64Ir93oCnqb9wxYW0=\ngithub.com/spf13/pflag v1.0.6 h1:jFzHGLGAlb3ruxLB8MhbI6A8+AQX/2eW4qeyNZXNp2o=\ngithub.com/spf13/pflag v1.0.6/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/spf13/viper v1.19.0 h1:RWq5SEjt8o25SROyN3z2OrDB9l7RPd3lwTWU8EcEdcI=\ngithub.com/spf13/viper v1.19.0/go.mod h1:GQUN9bilAbhU/jgc1bKs99f/suXKeUMct8Adx5+Ntkg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=",
      "language": "sum",
      "related_chunks": [
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52"
      ],
      "token_count": 1135
    },
    {
      "id": "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
      "file_path": "/workspace/go.sum",
      "start_line": 51,
      "end_line": 81,
      "content": "github.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/objx v0.5.2/go.mod h1:FRsXN1f5AsAjCGJKqEizvkpNtU+EGNCLh3NxZ/8L+MA=\ngithub.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.4/go.mod h1:sz/lmYIOXD/1dqDmKjjqLyZ2RngseejIcXlSw2iwfAo=\ngithub.com/stretchr/testify v1.9.0 h1:HtqpIVDClZ4nwg75+f6Lvsy/wHu+3BoSGCbBAcpTsTg=\ngithub.com/stretchr/testify v1.9.0/go.mod h1:r2ic/lqez/lEtzL7wO/rwa5dbSLXVDPFyf8C91i36aY=\ngithub.com/subosito/gotenv v1.6.0 h1:9NlTDc1FTs4qu0DDq7AEtTPNw6SVm7uBMsUCUjABIf8=\ngithub.com/subosito/gotenv v1.6.0/go.mod h1:Dk4QP5c2W3ibzajGcXpNraDfq2IrhjMIvMSWPKKo0FU=\ngo.uber.org/atomic v1.9.0 h1:ECmE8Bn/WFTYwEW/bpKD3M8VtR/zQVbavAoalC1PYyE=\ngo.uber.org/atomic v1.9.0/go.mod h1:fEN4uk6kAWBTFdckzkM89CLk9XfWZrxpCo0nPH17wJc=\ngo.uber.org/multierr v1.9.0 h1:7fIwc/ZtS0q++VgcfqFDxSBZVv/Xo49/SYnDFupUwlI=\ngo.uber.org/multierr v1.9.0/go.mod h1:X2jQV1h+kxSjClGpnseKVIxpmcjrj7MNnI0bnlfKTVQ=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9 h1:GoHiUyI/Tp2nVkLI2mCxVkOjsbSXD66ic0XW0js0R9g=\ngolang.org/x/exp v0.0.0-20230905200255-921286631fa9/go.mod h1:S2oDrQGGwySpoQPVqRShND87VCbxmc6bL1Yd2oYrm6k=\ngolang.org/x/sys v0.18.0 h1:DBdB3niSjOA/O0blCZBqDefyWNYveAYMNF1Wum0DYQ4=\ngolang.org/x/sys v0.18.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/text v0.14.0 h1:ScX5w1eTa3QqT8oi6+ziP7dTV1S2+ALU0bI+0zXKWiQ=\ngolang.org/x/text v0.14.0/go.mod h1:18ZOQIKpY8NJVqYksKHtTdi31H5itFRjB5/qKTNYzSU=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15 h1:YR8cESwS4TdDjEe65xsg0ogRM/Nc3DYOhEAlW+xobZo=\ngopkg.in/check.v1 v1.0.0-20190902080502-41f04d3bba15/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/ini.v1 v1.67.0 h1:Dgnx+6+nfE+IfzjUEISNeydPJh9AXNNsWbGP9KzCsOA=\ngopkg.in/ini.v1 v1.67.0/go.mod h1:pNLf8WUiyNEtQjuu5G5vTm06TEv9tsIgeAvK8hOrP4k=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\n",
      "language": "sum",
      "related_chunks": [
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6"
      ],
      "token_count": 652
    },
    {
      "id": "29268c9816e342bf6de5b9106c4b1393b51680c3fa09f02390473b42de6eb42f",
      "file_path": "/workspace/internal/analyzer/analyzer.go",
      "start_line": 4,
      "end_line": 10,
      "content": "type SymbolExtractor interface {\n\t// ExtractSymbols extracts symbols from content\n\tExtractSymbols(content []byte, language string, framework string) []string\n\n\t// ExtractImports extracts imports from content\n\tExtractImports(content []byte, language string) []string\n}",
      "language": "go",
      "symbols": [
        "SymbolExtractor"
      ],
      "related_chunks": [
        "ea969123c12535c85a9d0eeec2c401dfac3e23e424b741ba12825966b67d6d82",
        "7d346cf6a430f5b2630592d01141774b3884113051de1771fe1afe9bc89afdd7",
        "720486b8e41a4cf033c9550bc357a175bb0305b279994b7fd1eac77a20b92d97"
      ],
      "token_count": 66
    },
    {
      "id": "ea969123c12535c85a9d0eeec2c401dfac3e23e424b741ba12825966b67d6d82",
      "file_path": "/workspace/internal/analyzer/analyzer.go",
      "start_line": 13,
      "end_line": 15,
      "content": "type Analyzer struct {\n\tSymbolExtractor SymbolExtractor\n}",
      "language": "go",
      "symbols": [
        "Analyzer"
      ],
      "related_chunks": [
        "7d346cf6a430f5b2630592d01141774b3884113051de1771fe1afe9bc89afdd7",
        "29268c9816e342bf6de5b9106c4b1393b51680c3fa09f02390473b42de6eb42f",
        "720486b8e41a4cf033c9550bc357a175bb0305b279994b7fd1eac77a20b92d97"
      ],
      "token_count": 14
    },
    {
      "id": "7d346cf6a430f5b2630592d01141774b3884113051de1771fe1afe9bc89afdd7",
      "file_path": "/workspace/internal/analyzer/analyzer.go",
      "start_line": 18,
      "end_line": 22,
      "content": "func NewAnalyzer(symbolExtractor SymbolExtractor) *Analyzer {\n\treturn \u0026Analyzer{\n\t\tSymbolExtractor: symbolExtractor,\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewAnalyzer"
      ],
      "related_chunks": [
        "ea969123c12535c85a9d0eeec2c401dfac3e23e424b741ba12825966b67d6d82",
        "29268c9816e342bf6de5b9106c4b1393b51680c3fa09f02390473b42de6eb42f",
        "720486b8e41a4cf033c9550bc357a175bb0305b279994b7fd1eac77a20b92d97"
      ],
      "token_count": 30
    },
    {
      "id": "720486b8e41a4cf033c9550bc357a175bb0305b279994b7fd1eac77a20b92d97",
      "file_path": "/workspace/internal/analyzer/analyzer.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package analyzer",
      "language": "go",
      "symbols": [
        "analyzer"
      ],
      "related_chunks": [
        "7d346cf6a430f5b2630592d01141774b3884113051de1771fe1afe9bc89afdd7",
        "ea969123c12535c85a9d0eeec2c401dfac3e23e424b741ba12825966b67d6d82",
        "29268c9816e342bf6de5b9106c4b1393b51680c3fa09f02390473b42de6eb42f"
      ],
      "token_count": 4
    },
    {
      "id": "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 8,
      "end_line": 11,
      "content": "type ChunkingOptions struct {\n\tMinChunkSize int\n\tMaxChunkSize int\n}",
      "language": "go",
      "symbols": [
        "ChunkingOptions"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df",
        "90764d5f63ebb92422b47d7f7f8e224fa7913fc7a0697d5d67f7d6136bca237a",
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "1f678f241ee8cd4a49f6bf2d93af940d57da489a2ad8467d142d090a33fe8fff",
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "48e9ae5de72f683f2e03dcdc0779609a5b138efd3d651a8e4dda4b7b3af719b3"
      ],
      "token_count": 16
    },
    {
      "id": "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 14,
      "end_line": 23,
      "content": "type Chunker interface {\n\t// Language returns the language this chunker supports\n\tLanguage() string\n\n\t// CanHandle checks if this chunker can handle the given file\n\tCanHandle(filePath string, language string, framework string) bool\n\n\t// Chunk splits the file content into chunks\n\tChunk(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error)\n}",
      "language": "go",
      "symbols": [
        "Chunker"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "99aad39d9059acb115a49745212feb6cdbbbcf60712ba4cf5bb814bd8a0192ce",
        "95aaea4d6b4ad6861e7877a0e5e8f1660469ec06fdf120c23bbcc6fb771e5413",
        "13f5f6a86557736215fe1bd903b89309a0420c020e247ce9b181464a896b508e",
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "b83bfd97312b2fd05771ac34482813649a73d660f8b883ce34afc6c2ec427725",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d"
      ],
      "token_count": 100
    },
    {
      "id": "13f5f6a86557736215fe1bd903b89309a0420c020e247ce9b181464a896b508e",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 26,
      "end_line": 28,
      "content": "type ChunkerRegistry struct {\n\tchunkers []Chunker\n}",
      "language": "go",
      "symbols": [
        "ChunkerRegistry"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "b83bfd97312b2fd05771ac34482813649a73d660f8b883ce34afc6c2ec427725",
        "95aaea4d6b4ad6861e7877a0e5e8f1660469ec06fdf120c23bbcc6fb771e5413",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a"
      ],
      "token_count": 12
    },
    {
      "id": "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 31,
      "end_line": 35,
      "content": "func NewChunkerRegistry() *ChunkerRegistry {\n\treturn \u0026ChunkerRegistry{\n\t\tchunkers: make([]Chunker, 0),\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewChunkerRegistry"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "99aad39d9059acb115a49745212feb6cdbbbcf60712ba4cf5bb814bd8a0192ce",
        "13f5f6a86557736215fe1bd903b89309a0420c020e247ce9b181464a896b508e",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847"
      ],
      "token_count": 26
    },
    {
      "id": "95aaea4d6b4ad6861e7877a0e5e8f1660469ec06fdf120c23bbcc6fb771e5413",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 38,
      "end_line": 40,
      "content": "func (cr *ChunkerRegistry) Register(chunker Chunker) {\n\tcr.chunkers = append(cr.chunkers, chunker)\n}",
      "language": "go",
      "symbols": [
        "ChunkerRegistry.Register"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "13f5f6a86557736215fe1bd903b89309a0420c020e247ce9b181464a896b508e",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab"
      ],
      "token_count": 25
    },
    {
      "id": "b83bfd97312b2fd05771ac34482813649a73d660f8b883ce34afc6c2ec427725",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 43,
      "end_line": 50,
      "content": "func (cr *ChunkerRegistry) FindChunker(filePath string, language string, framework string) Chunker {\n\tfor _, chunker := range cr.chunkers {\n\t\tif chunker.CanHandle(filePath, language, framework) {\n\t\t\treturn chunker\n\t\t}\n\t}\n\treturn nil // No suitable chunker found\n}",
      "language": "go",
      "symbols": [
        "ChunkerRegistry.FindChunker"
      ],
      "imports": [
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "13f5f6a86557736215fe1bd903b89309a0420c020e247ce9b181464a896b508e",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d"
      ],
      "token_count": 65
    },
    {
      "id": "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 3,
      "end_line": 5,
      "content": "import (\n\t\"github.com/stream-ai/chunk/internal/model\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "a400d3967534afdac602dd00e701b7ba434294bfafd3c1a15edfac9c8859415a",
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "4896ea19215d09926b75bd3933b1d19f7cce49ac8325a45d8bace61469744eaf",
        "53087e6b2f537758abf88e8a0de122c7bffca850f05e395b387efd8bae7fb232",
        "afdc215497647e6370b4605ecda70b58d151c3a7287737154c6ae091f2b73262",
        "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
        "1f6c0b88850fea912d874937caa188304b2fecbc2f2b0b36a30a6d419abb1644",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6"
      ],
      "token_count": 13
    },
    {
      "id": "53087e6b2f537758abf88e8a0de122c7bffca850f05e395b387efd8bae7fb232",
      "file_path": "/workspace/internal/chunker/chunker.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package chunker",
      "language": "go",
      "symbols": [
        "chunker"
      ],
      "related_chunks": [
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
        "a3dc0c9c40c2b2ab10971b3c238e25c242ccc3baaa3fd29a16f1dc27c9907526",
        "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
        "0ea75059f71bdffd9e01d5a17ffc4641d510d615262a4bf60a6efbbdb4730320",
        "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
        "4896ea19215d09926b75bd3933b1d19f7cce49ac8325a45d8bace61469744eaf",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1",
        "d083103726bdeeddaa59021c8c6f30feb55872723a02d797dd77107b5193c31d",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8"
      ],
      "token_count": 3
    },
    {
      "id": "99aad39d9059acb115a49745212feb6cdbbbcf60712ba4cf5bb814bd8a0192ce",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 13,
      "end_line": 47,
      "content": "func TestChunkerRegistry(t *testing.T) {\n\tregistry := chunker.NewChunkerRegistry()\n\n\t// Register test chunkers\n\tgoChunker := chunker.NewGoChunker()\n\tshellChunker := chunker.NewShellChunker()\n\tdockerfileChunker := chunker.NewDockerfileChunker()\n\n\tregistry.Register(goChunker)\n\tregistry.Register(shellChunker)\n\tregistry.Register(dockerfileChunker)\n\n\ttests := []struct {\n\t\tname        string\n\t\tfilePath    string\n\t\tlanguage    string\n\t\tframework   string\n\t\twantChunker chunker.Chunker\n\t}{\n\t\t{\"Go file\", \"test.go\", \"go\", \"\", goChunker},\n\t\t{\"Shell file\", \"test.sh\", \"shell\", \"\", shellChunker},\n\t\t{\"Bash file\", \"test.bash\", \"shell\", \"\", shellChunker},\n\t\t{\"Dockerfile\", \"Dockerfile\", \"dockerfile\", \"\", dockerfileChunker},\n\t\t{\"Unknown file\", \"test.xyz\", \"unknown\", \"\", nil},\n\t}\n\n\tfor _, tt := range tests {\n\t\tt.Run(tt.name, func(t *testing.T) {\n\t\t\tgot := registry.FindChunker(tt.filePath, tt.language, tt.framework)\n\t\t\tif got != tt.wantChunker {\n\t\t\t\tt.Errorf(\"ChunkerRegistry.FindChunker() = %v, want %v\", got, tt.wantChunker)\n\t\t\t}\n\t\t})\n\t}\n}",
      "language": "go",
      "symbols": [
        "TestChunkerRegistry"
      ],
      "imports": [
        "os",
        "path/filepath",
        "testing",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536",
        "a400d3967534afdac602dd00e701b7ba434294bfafd3c1a15edfac9c8859415a",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "229757c123bb2feb7db9ed35482134e82e375bf7f496daa3e3ceb9917972c205",
        "886ded52cf11955f2833784197ac1d06b7c887ed60f49e342f368b64f6ea5c78",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "1f678f241ee8cd4a49f6bf2d93af940d57da489a2ad8467d142d090a33fe8fff"
      ],
      "token_count": 258
    },
    {
      "id": "48e9ae5de72f683f2e03dcdc0779609a5b138efd3d651a8e4dda4b7b3af719b3",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 50,
      "end_line": 118,
      "content": "func TestGoChunker(t *testing.T) {\n\tchunker := chunker.NewGoChunker()\n\tsymbolTable := model.NewSymbolTable()\n\n\t// Simple Go file content\n\tcontent := []byte(`package test\n\nimport (\n\t\"fmt\"\n)\n\n// Simple function\nfunc HelloWorld() string {\n\treturn \"Hello, World!\"\n}\n\n// Struct definition\ntype Person struct {\n\tName string\n\tAge  int\n}\n\n// Method definition\nfunc (p *Person) Greet() string {\n\treturn fmt.Sprintf(\"Hello, my name is %s\", p.Name)\n}\n`)\n\n\tchunks, err := chunker.Chunk(\"test.go\", content, symbolTable, chunker.ChunkingOptions{\n\t\tMinChunkSize: 5,\n\t\tMaxChunkSize: 50,\n\t})\n\tif err != nil {\n\t\tt.Fatalf(\"Chunker.Chunk() error = %v\", err)\n\t}\n\n\t// We should have multiple chunks: imports, function, struct, method\n\tif len(chunks) \u003c 3 {\n\t\tt.Errorf(\"Expected at least 3 chunks, got %d\", len(chunks))\n\t}\n\n\t// Check extracted symbols\n\tfoundFunction := false\n\tfoundStruct := false\n\tfoundMethod := false\n\n\tfor _, chunk := range chunks {\n\t\tfor _, symbol := range chunk.Symbols {\n\t\t\tswitch symbol {\n\t\t\tcase \"HelloWorld\":\n\t\t\t\tfoundFunction = true\n\t\t\tcase \"Person\":\n\t\t\t\tfoundStruct = true\n\t\t\tcase \"Person.Greet\":\n\t\t\t\tfoundMethod = true\n\t\t\t}\n\t\t}\n\t}\n\n\tif !foundFunction {\n\t\tt.Error(\"Failed to extract HelloWorld function symbol\")\n\t}\n\tif !foundStruct {\n\t\tt.Error(\"Failed to extract Person struct symbol\")\n\t}\n\tif !foundMethod {\n\t\tt.Error(\"Failed to extract Greet method symbol\")\n\t}\n}",
      "language": "go",
      "symbols": [
        "TestGoChunker"
      ],
      "imports": [
        "os",
        "path/filepath",
        "testing",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "03de635863599f63484ee6422e657c66413ed543130f1c9f3c1863bc1a2fbf96",
        "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
        "97a30f08dfec4bf4271b22fcaad7e4d6b201f925f4bb5c32492abe2502ac4470",
        "820c6ee1ead0d47710c1960064c39544129ed4f91137cc9ec2a06f582cc27e6f",
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "90764d5f63ebb92422b47d7f7f8e224fa7913fc7a0697d5d67f7d6136bca237a",
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3"
      ],
      "token_count": 341
    },
    {
      "id": "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 121,
      "end_line": 180,
      "content": "func TestShellChunker(t *testing.T) {\n\tchunker := chunker.NewShellChunker()\n\tsymbolTable := model.NewSymbolTable()\n\n\t// Shell script content\n\tcontent := []byte(`#!/bin/bash\n\n# A simple shell script\n\n# First function\nfunction say_hello() {\n    echo \"Hello, $1!\"\n}\n\n# Second function\ngoodbye() {\n    echo \"Goodbye, $1!\"\n}\n\n# Main code\nname=\"World\"\nsay_hello \"$name\"\ngoodbye \"$name\"\n`)\n\n\tchunks, err := chunker.Chunk(\"test.sh\", content, symbolTable, chunker.ChunkingOptions{\n\t\tMinChunkSize: 5,\n\t\tMaxChunkSize: 50,\n\t})\n\tif err != nil {\n\t\tt.Fatalf(\"Chunker.Chunk() error = %v\", err)\n\t}\n\n\t// We should have at least 2 function chunks and 1 main code chunk\n\tif len(chunks) \u003c 3 {\n\t\tt.Errorf(\"Expected at least 3 chunks, got %d\", len(chunks))\n\t}\n\n\t// Check for function symbols\n\tfoundSayHello := false\n\tfoundGoodbye := false\n\n\tfor _, chunk := range chunks {\n\t\tfor _, symbol := range chunk.Symbols {\n\t\t\tswitch symbol {\n\t\t\tcase \"say_hello\":\n\t\t\t\tfoundSayHello = true\n\t\t\tcase \"goodbye\":\n\t\t\t\tfoundGoodbye = true\n\t\t\t}\n\t\t}\n\t}\n\n\tif !foundSayHello {\n\t\tt.Error(\"Failed to extract say_hello function symbol\")\n\t}\n\tif !foundGoodbye {\n\t\tt.Error(\"Failed to extract goodbye function symbol\")\n\t}\n}",
      "language": "go",
      "symbols": [
        "TestShellChunker"
      ],
      "imports": [
        "os",
        "path/filepath",
        "testing",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "6e5e3b37c5ec1058d47932afd1c69c72c95ee4911bb9844b41fbcd679f1d8444",
        "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "53087e6b2f537758abf88e8a0de122c7bffca850f05e395b387efd8bae7fb232",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268"
      ],
      "token_count": 292
    },
    {
      "id": "90764d5f63ebb92422b47d7f7f8e224fa7913fc7a0697d5d67f7d6136bca237a",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 183,
      "end_line": 254,
      "content": "func TestDockerfileChunker(t *testing.T) {\n\tchunker := chunker.NewDockerfileChunker()\n\tsymbolTable := model.NewSymbolTable()\n\n\t// Dockerfile content\n\tcontent := []byte(`# Stage 1: Build\nFROM golang:1.18 AS build\n\nWORKDIR /app\nCOPY go.mod ./\nCOPY go.sum ./\nRUN go mod download\n\nCOPY . .\nRUN go build -o /app/myapp\n\n# Stage 2: Run\nFROM alpine:latest\n\nWORKDIR /app\nCOPY --from=build /app/myapp .\n\nEXPOSE 8080\nCMD [\"/app/myapp\"]\n`)\n\n\tchunks, err := chunker.Chunk(\"Dockerfile\", content, symbolTable, chunker.ChunkingOptions{\n\t\tMinChunkSize: 5,\n\t\tMaxChunkSize: 50,\n\t})\n\tif err != nil {\n\t\tt.Fatalf(\"Chunker.Chunk() error = %v\", err)\n\t}\n\n\t// We should have multiple chunks for each major instruction\n\tif len(chunks) \u003c 2 {\n\t\tt.Errorf(\"Expected at least 2 chunks, got %d\", len(chunks))\n\t}\n\n\t// Check for stage and instruction symbols\n\tfoundFromBuild := false\n\tfoundFromAlpine := false\n\tfoundCopy := false\n\tfoundRun := false\n\n\tfor _, chunk := range chunks {\n\t\tfor _, symbol := range chunk.Symbols {\n\t\t\tswitch symbol {\n\t\t\tcase \"FROM\":\n\t\t\t\tif !foundFromBuild {\n\t\t\t\t\tfoundFromBuild = true\n\t\t\t\t} else {\n\t\t\t\t\tfoundFromAlpine = true\n\t\t\t\t}\n\t\t\tcase \"COPY\":\n\t\t\t\tfoundCopy = true\n\t\t\tcase \"RUN\":\n\t\t\t\tfoundRun = true\n\t\t\t}\n\t\t}\n\t}\n\n\tif !foundFromBuild || !foundFromAlpine {\n\t\tt.Error(\"Failed to extract FROM instruction symbols\")\n\t}\n\tif !foundCopy {\n\t\tt.Error(\"Failed to extract COPY instruction symbol\")\n\t}\n\tif !foundRun {\n\t\tt.Error(\"Failed to extract RUN instruction symbol\")\n\t}\n}",
      "language": "go",
      "symbols": [
        "TestDockerfileChunker"
      ],
      "imports": [
        "os",
        "path/filepath",
        "testing",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
        "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536"
      ],
      "token_count": 364
    },
    {
      "id": "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 257,
      "end_line": 344,
      "content": "func TestEndToEndChunking(t *testing.T) {\n\t// Setup a temporary test directory with sample files\n\ttmpDir, err := os.MkdirTemp(\"\", \"chunker-test\")\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to create temp dir: %v\", err)\n\t}\n\tdefer os.RemoveAll(tmpDir)\n\n\t// Create a Go file\n\tgoFile := filepath.Join(tmpDir, \"main.go\")\n\terr = os.WriteFile(goFile, []byte(`package main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello, World!\")\n}\n`), 0o644)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to write Go file: %v\", err)\n\t}\n\n\t// Create a shell script\n\tshellFile := filepath.Join(tmpDir, \"script.sh\")\n\terr = os.WriteFile(shellFile, []byte(`#!/bin/bash\necho \"Hello from shell!\"\n`), 0o644)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to write shell file: %v\", err)\n\t}\n\n\t// Create a Dockerfile\n\tdockerFile := filepath.Join(tmpDir, \"Dockerfile\")\n\terr = os.WriteFile(dockerFile, []byte(`FROM alpine\nCMD [\"echo\", \"Hello from Docker!\"]\n`), 0o644)\n\tif err != nil {\n\t\tt.Fatalf(\"Failed to write Dockerfile: %v\", err)\n\t}\n\n\t// Set up the chunker registry\n\tregistry := chunker.NewChunkerRegistry()\n\tregistry.Register(chunker.NewGoChunker())\n\tregistry.Register(chunker.NewShellChunker())\n\tregistry.Register(chunker.NewDockerfileChunker())\n\tregistry.Register(chunker.NewGenericChunker())\n\n\tlangDetector := detector.NewDefaultLanguageDetector()\n\tsymbolTable := model.NewSymbolTable()\n\n\t// Process each file\n\tfiles := []string{goFile, shellFile, dockerFile}\n\n\tfor _, file := range files {\n\t\tcontent, err := os.ReadFile(file)\n\t\tif err != nil {\n\t\t\tt.Fatalf(\"Failed to read file %s: %v\", file, err)\n\t\t}\n\n\t\tlang := langDetector.DetectLanguage(file, content)\n\t\tchunker := registry.FindChunker(file, lang, \"\")\n\n\t\tif chunker == nil {\n\t\t\tt.Errorf(\"No chunker found for %s with language %s\", file, lang)\n\t\t\tcontinue\n\t\t}\n\n\t\tchunks, err := chunker.Chunk(file, content, symbolTable, chunker.ChunkingOptions{\n\t\t\tMinChunkSize: 5,\n\t\t\tMaxChunkSize: 50,\n\t\t})\n\t\tif err != nil {\n\t\t\tt.Errorf(\"Failed to chunk file %s: %v\", file, err)\n\t\t\tcontinue\n\t\t}\n\n\t\tif len(chunks) == 0 {\n\t\t\tt.Errorf(\"No chunks produced for file %s\", file)\n\t\t}\n\n\t\t// Verify language field is properly set\n\t\tfor i, chunk := range chunks {\n\t\t\tif chunk.Language == \"\" {\n\t\t\t\tt.Errorf(\"Chunk %d from file %s has empty language\", i, file)\n\t\t\t}\n\t\t}\n\t}\n}",
      "language": "go",
      "symbols": [
        "TestEndToEndChunking"
      ],
      "imports": [
        "os",
        "path/filepath",
        "testing",
        "github.com/stream-ai/chunk/internal/chunker",
        "github.com/stream-ai/chunk/internal/detector",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "092e9ea5791cdea72822cd3efc355d9391cc206c6e375c4a9213e38382c8aaac",
        "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536",
        "03de635863599f63484ee6422e657c66413ed543130f1c9f3c1863bc1a2fbf96",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
        "90764d5f63ebb92422b47d7f7f8e224fa7913fc7a0697d5d67f7d6136bca237a",
        "1974ef5674bd7d5677a55f16b183fb6e07011d699fe56462581b3b5a96e4d846"
      ],
      "token_count": 560
    },
    {
      "id": "4896ea19215d09926b75bd3933b1d19f7cce49ac8325a45d8bace61469744eaf",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 3,
      "end_line": 11,
      "content": "import (\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/stream-ai/chunk/internal/chunker\"\n\t\"github.com/stream-ai/chunk/internal/detector\"\n\t\"github.com/stream-ai/chunk/internal/model\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "3212dd24d4f0e84213a53cdaed1128c684600f44e0354917ae0dd3eb40412aa6",
        "229757c123bb2feb7db9ed35482134e82e375bf7f496daa3e3ceb9917972c205",
        "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
        "c71acd5e9db7741c62dee4b68ea59555a32e7f01b079c89a6e35bb5f3c98fa8e",
        "eac3310dc5c9fa4349dff7ede18efeb8984f5e4d1962ceea123ce9f912450c98",
        "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "8868e73bd57e3e2b416c25d2be19dae31229f384e2e9b24bc74ad3ec833b7794"
      ],
      "token_count": 46
    },
    {
      "id": "229757c123bb2feb7db9ed35482134e82e375bf7f496daa3e3ceb9917972c205",
      "file_path": "/workspace/internal/chunker/chunker_test.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package chunker_test",
      "language": "go",
      "symbols": [
        "chunker_test"
      ],
      "related_chunks": [
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "820c6ee1ead0d47710c1960064c39544129ed4f91137cc9ec2a06f582cc27e6f",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "4896ea19215d09926b75bd3933b1d19f7cce49ac8325a45d8bace61469744eaf",
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "3a253d613ea48a85d7d06c67e71c12cf2c55935a0108f58df786189ecd77e733",
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1"
      ],
      "token_count": 5
    },
    {
      "id": "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 13,
      "end_line": 13,
      "content": "type DockerfileChunker struct{}",
      "language": "go",
      "symbols": [
        "DockerfileChunker"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "bf8d8aa1e200f5392569ce1c539ca0f4c8035507e4c00694305774682bf9a324",
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
        "e51924cdf33e4e29ef261042a876895b9e7ada6472a1e6643bdf27d5c3167828",
        "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1",
        "1f678f241ee8cd4a49f6bf2d93af940d57da489a2ad8467d142d090a33fe8fff",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee"
      ],
      "token_count": 7
    },
    {
      "id": "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 16,
      "end_line": 18,
      "content": "func NewDockerfileChunker() *DockerfileChunker {\n\treturn \u0026DockerfileChunker{}\n}",
      "language": "go",
      "symbols": [
        "NewDockerfileChunker"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 19
    },
    {
      "id": "e51924cdf33e4e29ef261042a876895b9e7ada6472a1e6643bdf27d5c3167828",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 21,
      "end_line": 23,
      "content": "func (c *DockerfileChunker) Language() string {\n\treturn \"dockerfile\"\n}",
      "language": "go",
      "symbols": [
        "DockerfileChunker.Language"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 17
    },
    {
      "id": "bf8d8aa1e200f5392569ce1c539ca0f4c8035507e4c00694305774682bf9a324",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 26,
      "end_line": 28,
      "content": "func (c *DockerfileChunker) CanHandle(filePath string, language string, framework string) bool {\n\treturn language == \"dockerfile\"\n}",
      "language": "go",
      "symbols": [
        "DockerfileChunker.CanHandle"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f"
      ],
      "token_count": 32
    },
    {
      "id": "1f678f241ee8cd4a49f6bf2d93af940d57da489a2ad8467d142d090a33fe8fff",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 31,
      "end_line": 79,
      "content": "func (c *DockerfileChunker) Chunk(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error) {\n\tlines := bytes.Split(content, []byte(\"\\n\"))\n\tvar chunks []model.Chunk\n\t\n\t// Group by stages and major instructions\n\tvar currentChunk [][]byte\n\tstartLine := 1\n\t\n\tfor i, line := range lines {\n\t\tlineStr := string(line)\n\t\ttrimmedLine := strings.TrimSpace(lineStr)\n\t\t\n\t\t// Skip empty lines and comments at the beginning of potential chunks\n\t\tif len(currentChunk) == 0 \u0026\u0026 (trimmedLine == \"\" || strings.HasPrefix(trimmedLine, \"#\")) {\n\t\t\tcurrentChunk = append(currentChunk, line)\n\t\t\tcontinue\n\t\t}\n\t\t\n\t\t// Check for stage boundaries and major instructions\n\t\t// FROM creates a new stage, so it should start a new chunk\n\t\t// Major instructions like RUN, COPY, ADD usually represent significant blocks\n\t\tif isChunkBoundary(trimmedLine) \u0026\u0026 len(currentChunk) \u003e 0 {\n\t\t\tchunk := c.createChunk(filePath, currentChunk, startLine, i, symbolTable)\n\t\t\tchunks = append(chunks, chunk)\n\t\t\tcurrentChunk = [][]byte{}\n\t\t\tstartLine = i + 1\n\t\t}\n\t\t\n\t\t// Add the line to the current chunk\n\t\tcurrentChunk = append(currentChunk, line)\n\t\t\n\t\t// If we have accumulated many lines in a single instruction (like a big RUN),\n\t\t// consider breaking it into smaller chunks\n\t\tif len(currentChunk) \u003e= options.MaxChunkSize {\n\t\t\tchunk := c.createChunk(filePath, currentChunk, startLine, i+1, symbolTable)\n\t\t\tchunks = append(chunks, chunk)\n\t\t\tcurrentChunk = [][]byte{}\n\t\t\tstartLine = i + 2\n\t\t}\n\t}\n\t\n\t// Add any remaining lines\n\tif len(currentChunk) \u003e 0 {\n\t\tchunk := c.createChunk(filePath, currentChunk, startLine, len(lines), symbolTable)\n\t\tchunks = append(chunks, chunk)\n\t}\n\t\n\treturn chunks, nil\n}",
      "language": "go",
      "symbols": [
        "DockerfileChunker.Chunk"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "eac3310dc5c9fa4349dff7ede18efeb8984f5e4d1962ceea123ce9f912450c98",
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d"
      ],
      "token_count": 425
    },
    {
      "id": "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 82,
      "end_line": 113,
      "content": "func (c *DockerfileChunker) createChunk(filePath string, lines [][]byte, startLine, endLine int, symbolTable *model.SymbolTable) model.Chunk {\n\tcontent := string(bytes.Join(lines, []byte(\"\\n\")))\n\tchunkID := util.GenerateID(filePath, content)\n\t\n\t// Extract instructions/stages as symbols\n\tsymbols := c.extractInstructions(content)\n\t\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startLine,\n\t\tEndLine:    endLine,\n\t\tContent:    content,\n\t\tLanguage:   \"dockerfile\",\n\t\tSymbols:    symbols,\n\t\tTokenCount: util.EstimateTokenCount(content),\n\t}\n\t\n\t// Add symbols to symbol table\n\tfor _, symbol := range symbols {\n\t\tsymbolTable.AddDefinition(symbol, model.SymbolDefinition{\n\t\t\tName:      symbol,\n\t\t\tChunkID:   chunkID,\n\t\t\tFilePath:  filePath,\n\t\t\tStartLine: startLine,\n\t\t\tEndLine:   endLine,\n\t\t\tType:      \"instruction\",\n\t\t})\n\t}\n\t\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "DockerfileChunker.createChunk"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847"
      ],
      "token_count": 218
    },
    {
      "id": "eac3310dc5c9fa4349dff7ede18efeb8984f5e4d1962ceea123ce9f912450c98",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 116,
      "end_line": 143,
      "content": "func isChunkBoundary(line string) bool {\n\tif line == \"\" {\n\t\treturn false\n\t}\n\t\n\t// Standard Dockerfile instructions that typically mark logical sections\n\tmajorInstructions := []string{\n\t\t\"FROM\", \"MAINTAINER\", \"RUN\", \"CMD\", \"LABEL\", \n\t\t\"EXPOSE\", \"ENV\", \"ADD\", \"COPY\", \"ENTRYPOINT\", \n\t\t\"VOLUME\", \"USER\", \"WORKDIR\", \"ARG\", \"ONBUILD\", \n\t\t\"STOPSIGNAL\", \"HEALTHCHECK\", \"SHELL\",\n\t}\n\t\n\tfor _, instr := range majorInstructions {\n\t\tif strings.HasPrefix(strings.ToUpper(line), instr+\" \") {\n\t\t\treturn true\n\t\t}\n\t}\n\t\n\t// Also check for stage names like \"FROM xyz AS stagename\"\n\tif strings.HasPrefix(strings.ToUpper(line), \"FROM \") \u0026\u0026 strings.Contains(strings.ToUpper(line), \" AS \") {\n\t\treturn true\n\t}\n\t\n\t// Multi-line instructions like RUN that use backslash continuation\n\t// should not break at continuation lines\n\treturn false\n}",
      "language": "go",
      "symbols": [
        "isChunkBoundary"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "1f678f241ee8cd4a49f6bf2d93af940d57da489a2ad8467d142d090a33fe8fff",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2"
      ],
      "token_count": 203
    },
    {
      "id": "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 146,
      "end_line": 176,
      "content": "func (c *DockerfileChunker) extractInstructions(content string) []string {\n\tvar symbols []string\n\t\n\t// Extract instructions (FROM, RUN, etc.)\n\tinstructionPattern := regexp.MustCompile(`(?m)^(FROM|RUN|CMD|LABEL|EXPOSE|ENV|ADD|COPY|ENTRYPOINT|VOLUME|USER|WORKDIR|ARG|ONBUILD|STOPSIGNAL|HEALTHCHECK|SHELL)\\s+`)\n\t\n\tmatches := instructionPattern.FindAllStringSubmatch(content, -1)\n\tfor _, match := range matches {\n\t\tsymbols = append(symbols, match[1])\n\t}\n\t\n\t// Extract stage names if present (FROM xyz AS stagename)\n\tstagePattern := regexp.MustCompile(`(?i)FROM\\s+\\S+\\s+AS\\s+(\\S+)`)\n\tstageMatches := stagePattern.FindAllStringSubmatch(content, -1)\n\tfor _, match := range stageMatches {\n\t\tsymbols = append(symbols, \"stage:\"+match[1])\n\t}\n\t\n\t// Deduplicate\n\tsymbolMap := make(map[string]bool)\n\tfor _, symbol := range symbols {\n\t\tsymbolMap[symbol] = true\n\t}\n\t\n\tvar uniqueSymbols []string\n\tfor symbol := range symbolMap {\n\t\tuniqueSymbols = append(uniqueSymbols, symbol)\n\t}\n\t\n\treturn uniqueSymbols\n}",
      "language": "go",
      "symbols": [
        "DockerfileChunker.extractInstructions"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a"
      ],
      "token_count": 247
    },
    {
      "id": "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 3,
      "end_line": 10,
      "content": "import (\n\t\"bytes\"\n\t\"regexp\"\n\t\"strings\"\n\t\n\t\"github.com/stream-ai/chunk/internal/model\"\n\t\"github.com/stream-ai/chunk/pkg/util\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "1974ef5674bd7d5677a55f16b183fb6e07011d699fe56462581b3b5a96e4d846",
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4"
      ],
      "token_count": 31
    },
    {
      "id": "afdc215497647e6370b4605ecda70b58d151c3a7287737154c6ae091f2b73262",
      "file_path": "/workspace/internal/chunker/dockerfile.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package chunker",
      "language": "go",
      "symbols": [
        "chunker"
      ],
      "related_chunks": [
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "48e9ae5de72f683f2e03dcdc0779609a5b138efd3d651a8e4dda4b7b3af719b3",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "bf8d8aa1e200f5392569ce1c539ca0f4c8035507e4c00694305774682bf9a324",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
        "9b404e45cb7b221b33b814000b2dc324130ab58c039efab2f0c8e5980e6dc880",
        "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536"
      ],
      "token_count": 3
    },
    {
      "id": "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 13,
      "end_line": 13,
      "content": "type GenericChunker struct{}",
      "language": "go",
      "symbols": [
        "GenericChunker"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "03de635863599f63484ee6422e657c66413ed543130f1c9f3c1863bc1a2fbf96",
        "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "ecbdaa484fb1e9fc1124cd853cfaa7754d14e58c06845c9d4b400f46438d50b6",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2"
      ],
      "token_count": 7
    },
    {
      "id": "03de635863599f63484ee6422e657c66413ed543130f1c9f3c1863bc1a2fbf96",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 16,
      "end_line": 18,
      "content": "func NewGenericChunker() *GenericChunker {\n\treturn \u0026GenericChunker{}\n}",
      "language": "go",
      "symbols": [
        "NewGenericChunker"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d"
      ],
      "token_count": 17
    },
    {
      "id": "21b48c3034b8c66dac84a0772092110d6b6cfb403ebf90ba18e1f10c796acf4d",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 21,
      "end_line": 23,
      "content": "func (c *GenericChunker) Language() string {\n\treturn \"generic\"\n}",
      "language": "go",
      "symbols": [
        "GenericChunker.Language"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee"
      ],
      "token_count": 16
    },
    {
      "id": "ecbdaa484fb1e9fc1124cd853cfaa7754d14e58c06845c9d4b400f46438d50b6",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 26,
      "end_line": 29,
      "content": "func (c *GenericChunker) CanHandle(filePath string, language string, framework string) bool {\n\t// Generic chunker is a fallback for all files\n\treturn true\n}",
      "language": "go",
      "symbols": [
        "GenericChunker.CanHandle"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 39
    },
    {
      "id": "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 32,
      "end_line": 85,
      "content": "func (c *GenericChunker) Chunk(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error) {\n\tlines := bytes.Split(content, []byte(\"\\n\"))\n\tvar chunks []model.Chunk\n\n\t// Determine language from the file path (best effort)\n\tlanguage := filepath.Ext(filePath)\n\tif language != \"\" \u0026\u0026 language[0] == '.' {\n\t\tlanguage = language[1:] // Remove the leading dot\n\t}\n\n\t// Simple line-based chunking\n\tfor i := 0; i \u003c len(lines); i += options.MaxChunkSize {\n\t\tend := i + options.MaxChunkSize\n\t\tif end \u003e len(lines) {\n\t\t\tend = len(lines)\n\t\t}\n\n\t\tchunkLines := lines[i:end]\n\t\tchunkContent := string(bytes.Join(chunkLines, []byte(\"\\n\")))\n\n\t\t// Generate ID\n\t\tchunkID := util.GenerateID(filePath, chunkContent)\n\n\t\t// Extract symbols (basic approach for generic files)\n\t\tsymbols := extractGenericSymbols(chunkContent)\n\n\t\tchunk := model.Chunk{\n\t\t\tID:         chunkID,\n\t\t\tFilePath:   filePath,\n\t\t\tStartLine:  i + 1,\n\t\t\tEndLine:    end,\n\t\t\tContent:    chunkContent,\n\t\t\tLanguage:   language,\n\t\t\tSymbols:    symbols,\n\t\t\tTokenCount: util.EstimateTokenCount(chunkContent),\n\t\t}\n\n\t\t// Add symbols to symbol table\n\t\tfor _, symbol := range symbols {\n\t\t\tsymbolTable.AddDefinition(symbol, model.SymbolDefinition{\n\t\t\t\tName:      symbol,\n\t\t\t\tChunkID:   chunkID,\n\t\t\t\tFilePath:  filePath,\n\t\t\t\tStartLine: i + 1,\n\t\t\t\tEndLine:   end,\n\t\t\t\tType:      \"generic\",\n\t\t\t})\n\t\t}\n\n\t\tchunks = append(chunks, chunk)\n\t}\n\n\treturn chunks, nil\n}",
      "language": "go",
      "symbols": [
        "GenericChunker.Chunk"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8",
        "6e5e3b37c5ec1058d47932afd1c69c72c95ee4911bb9844b41fbcd679f1d8444",
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df"
      ],
      "token_count": 360
    },
    {
      "id": "6e5e3b37c5ec1058d47932afd1c69c72c95ee4911bb9844b41fbcd679f1d8444",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 89,
      "end_line": 111,
      "content": "func extractGenericSymbols(content string) []string {\n\t// Look for common patterns that might indicate symbol definitions\n\t// This is a very basic implementation\n\n\tsymbolsMap := make(map[string]bool)\n\n\t// Look for function-like patterns across languages\n\tfuncRegex := regexp.MustCompile(`(function|func|def|method|void|int|string|bool|class|struct|interface)\\s+(\\w+)`)\n\tmatches := funcRegex.FindAllStringSubmatch(content, -1)\n\tfor _, match := range matches {\n\t\tif len(match) \u003e 2 {\n\t\t\tsymbolsMap[match[2]] = true\n\t\t}\n\t}\n\n\t// Convert map to slice\n\tsymbols := make([]string, 0, len(symbolsMap))\n\tfor symbol := range symbolsMap {\n\t\tsymbols = append(symbols, symbol)\n\t}\n\n\treturn symbols\n}",
      "language": "go",
      "symbols": [
        "extractGenericSymbols"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "regexp",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 170
    },
    {
      "id": "d083103726bdeeddaa59021c8c6f30feb55872723a02d797dd77107b5193c31d",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 3,
      "end_line": 10,
      "content": "import (\n\t\"bytes\"\n\t\"path/filepath\"\n\t\"regexp\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n\t\"github.com/stream-ai/chunk/pkg/util\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
        "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1",
        "97a30f08dfec4bf4271b22fcaad7e4d6b201f925f4bb5c32492abe2502ac4470",
        "886ded52cf11955f2833784197ac1d06b7c887ed60f49e342f368b64f6ea5c78",
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae"
      ],
      "token_count": 32
    },
    {
      "id": "886ded52cf11955f2833784197ac1d06b7c887ed60f49e342f368b64f6ea5c78",
      "file_path": "/workspace/internal/chunker/generic.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package chunker",
      "language": "go",
      "symbols": [
        "chunker"
      ],
      "related_chunks": [
        "e883cd65aa076138a66678231b6dd812b509176f4094e4268491e1cb81d8d198",
        "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
        "53087e6b2f537758abf88e8a0de122c7bffca850f05e395b387efd8bae7fb232",
        "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "8868e73bd57e3e2b416c25d2be19dae31229f384e2e9b24bc74ad3ec833b7794",
        "ecbdaa484fb1e9fc1124cd853cfaa7754d14e58c06845c9d4b400f46438d50b6",
        "a3dc0c9c40c2b2ab10971b3c238e25c242ccc3baaa3fd29a16f1dc27c9907526",
        "4ad044d454f7a6988c501966ab1ffc627b9c13ae8843157ffaabda41bc8522b8",
        "0ea75059f71bdffd9e01d5a17ffc4641d510d615262a4bf60a6efbbdb4730320"
      ],
      "token_count": 3
    },
    {
      "id": "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 15,
      "end_line": 15,
      "content": "type GoChunker struct{}",
      "language": "go",
      "symbols": [
        "GoChunker"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "092e9ea5791cdea72822cd3efc355d9391cc206c6e375c4a9213e38382c8aaac",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
        "a400d3967534afdac602dd00e701b7ba434294bfafd3c1a15edfac9c8859415a",
        "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
        "1f6c0b88850fea912d874937caa188304b2fecbc2f2b0b36a30a6d419abb1644",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
        "3a253d613ea48a85d7d06c67e71c12cf2c55935a0108f58df786189ecd77e733",
        "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df"
      ],
      "token_count": 5
    },
    {
      "id": "092e9ea5791cdea72822cd3efc355d9391cc206c6e375c4a9213e38382c8aaac",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 18,
      "end_line": 20,
      "content": "func NewGoChunker() *GoChunker {\n\treturn \u0026GoChunker{}\n}",
      "language": "go",
      "symbols": [
        "NewGoChunker"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847"
      ],
      "token_count": 13
    },
    {
      "id": "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 23,
      "end_line": 25,
      "content": "func (c *GoChunker) Language() string {\n\treturn \"go\"\n}",
      "language": "go",
      "symbols": [
        "GoChunker.Language"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f"
      ],
      "token_count": 13
    },
    {
      "id": "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 28,
      "end_line": 30,
      "content": "func (c *GoChunker) CanHandle(filePath string, language string, framework string) bool {\n\treturn language == \"go\"\n}",
      "language": "go",
      "symbols": [
        "GoChunker.CanHandle"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e"
      ],
      "token_count": 28
    },
    {
      "id": "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 33,
      "end_line": 85,
      "content": "func (c *GoChunker) Chunk(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error) {\n\t// Setup file set and parse the file\n\tfset := token.NewFileSet()\n\tfile, err := parser.ParseFile(fset, filePath, content, parser.ParseComments)\n\tif err != nil {\n\t\t// If parsing fails, fall back to line-based chunking\n\t\treturn c.fallbackChunking(filePath, content, symbolTable, options)\n\t}\n\n\t// Extract package name\n\tpackageName := file.Name.Name\n\n\tvar chunks []model.Chunk\n\n\t// Process imports\n\timports := c.extractImports(file)\n\n\t// First pass: Create chunks for top-level declarations\n\tfor _, decl := range file.Decls {\n\t\tswitch d := decl.(type) {\n\t\tcase *ast.FuncDecl:\n\t\t\t// Function or method declaration\n\t\t\tchunk := c.processFuncDecl(fset, d, filePath, content, packageName, imports, symbolTable)\n\t\t\tchunks = append(chunks, chunk)\n\n\t\tcase *ast.GenDecl:\n\t\t\t// Type, const, var declarations\n\t\t\tif d.Tok == token.TYPE || d.Tok == token.CONST || d.Tok == token.VAR {\n\t\t\t\tchunk := c.processGenDecl(fset, d, filePath, content, packageName, imports, symbolTable)\n\t\t\t\tif chunk.Content != \"\" {\n\t\t\t\t\tchunks = append(chunks, chunk)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Handle imports section if not already included in a chunk\n\timportsChunk := c.processImportsSection(fset, file, filePath, content, packageName, symbolTable)\n\tif importsChunk.Content != \"\" {\n\t\tchunks = append(chunks, importsChunk)\n\t}\n\n\t// Handle package declaration and comments at the top of the file\n\tpackageChunk := c.processPackageSection(fset, file, filePath, content, packageName, symbolTable)\n\tif packageChunk.Content != \"\" {\n\t\tchunks = append(chunks, packageChunk)\n\t}\n\n\t// Second pass: Collect references\n\tc.collectReferences(fset, file, chunks, symbolTable)\n\n\treturn chunks, nil\n}",
      "language": "go",
      "symbols": [
        "GoChunker.Chunk"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee"
      ],
      "token_count": 444
    },
    {
      "id": "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 88,
      "end_line": 175,
      "content": "func (c *GoChunker) processFuncDecl(fset *token.FileSet, decl *ast.FuncDecl, filePath string, content []byte, packageName string, imports []string, symbolTable *model.SymbolTable) model.Chunk {\n\t// Get position information\n\tstartPos := fset.Position(decl.Pos())\n\tendPos := fset.Position(decl.End())\n\n\t// Extract function content\n\tfuncContent := string(content[startPos.Offset:endPos.Offset])\n\n\t// Generate ID for the chunk\n\tchunkID := util.GenerateID(filePath, funcContent)\n\n\t// Determine symbol name\n\tvar symbolName string\n\tif decl.Recv == nil {\n\t\t// Regular function\n\t\tsymbolName = decl.Name.Name\n\t} else {\n\t\t// Method\n\t\t// Get the receiver type\n\t\treceiver := decl.Recv.List[0].Type\n\t\tvar receiverType string\n\n\t\t// Handle pointer receivers like (*T)\n\t\tif starExpr, ok := receiver.(*ast.StarExpr); ok {\n\t\t\tif ident, ok := starExpr.X.(*ast.Ident); ok {\n\t\t\t\treceiverType = ident.Name\n\t\t\t}\n\t\t} else if ident, ok := receiver.(*ast.Ident); ok {\n\t\t\treceiverType = ident.Name\n\t\t}\n\n\t\tif receiverType != \"\" {\n\t\t\tsymbolName = receiverType + \".\" + decl.Name.Name\n\t\t} else {\n\t\t\tsymbolName = decl.Name.Name\n\t\t}\n\t}\n\n\t// Create chunk\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startPos.Line,\n\t\tEndLine:    endPos.Line,\n\t\tContent:    funcContent,\n\t\tLanguage:   \"go\",\n\t\tSymbols:    []string{symbolName},\n\t\tImports:    imports,\n\t\tTokenCount: util.EstimateTokenCount(funcContent),\n\t}\n\n\t// Add symbol definition to symbol table\n\tsymbolTable.AddDefinition(symbolName, model.SymbolDefinition{\n\t\tName:      symbolName,\n\t\tChunkID:   chunkID,\n\t\tFilePath:  filePath,\n\t\tStartLine: startPos.Line,\n\t\tEndLine:   endPos.Line,\n\t\tType:      \"function\",\n\t})\n\n\t// For methods, also record the receiver type to establish relationships\n\tif decl.Recv != nil {\n\t\treceiver := decl.Recv.List[0].Type\n\t\tvar receiverType string\n\n\t\t// Handle pointer receivers like (*T)\n\t\tif starExpr, ok := receiver.(*ast.StarExpr); ok {\n\t\t\tif ident, ok := starExpr.X.(*ast.Ident); ok {\n\t\t\t\treceiverType = ident.Name\n\t\t\t}\n\t\t} else if ident, ok := receiver.(*ast.Ident); ok {\n\t\t\treceiverType = ident.Name\n\t\t}\n\n\t\tif receiverType != \"\" {\n\t\t\t// Add a reference to the type\n\t\t\tsymbolTable.AddReference(receiverType, model.SymbolReference{\n\t\t\t\tName:     receiverType,\n\t\t\t\tChunkID:  chunkID,\n\t\t\t\tFilePath: filePath,\n\t\t\t\tLine:     startPos.Line,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "GoChunker.processFuncDecl"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec"
      ],
      "token_count": 587
    },
    {
      "id": "a400d3967534afdac602dd00e701b7ba434294bfafd3c1a15edfac9c8859415a",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 178,
      "end_line": 252,
      "content": "func (c *GoChunker) processGenDecl(fset *token.FileSet, decl *ast.GenDecl, filePath string, content []byte, packageName string, imports []string, symbolTable *model.SymbolTable) model.Chunk {\n\t// Get position information\n\tstartPos := fset.Position(decl.Pos())\n\tendPos := fset.Position(decl.End())\n\n\t// Extract declaration content\n\tdeclContent := string(content[startPos.Offset:endPos.Offset])\n\n\t// Generate ID for the chunk\n\tchunkID := util.GenerateID(filePath, declContent)\n\n\t// Extract symbols based on declaration type\n\tvar symbols []string\n\tvar declType string\n\n\tswitch decl.Tok {\n\tcase token.TYPE:\n\t\tdeclType = \"type\"\n\t\tfor _, spec := range decl.Specs {\n\t\t\tif typeSpec, ok := spec.(*ast.TypeSpec); ok {\n\t\t\t\tsymbols = append(symbols, typeSpec.Name.Name)\n\t\t\t}\n\t\t}\n\tcase token.CONST:\n\t\tdeclType = \"const\"\n\t\tfor _, spec := range decl.Specs {\n\t\t\tif valueSpec, ok := spec.(*ast.ValueSpec); ok {\n\t\t\t\tfor _, name := range valueSpec.Names {\n\t\t\t\t\tsymbols = append(symbols, name.Name)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\tcase token.VAR:\n\t\tdeclType = \"var\"\n\t\tfor _, spec := range decl.Specs {\n\t\t\tif valueSpec, ok := spec.(*ast.ValueSpec); ok {\n\t\t\t\tfor _, name := range valueSpec.Names {\n\t\t\t\t\tsymbols = append(symbols, name.Name)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Skip empty declarations\n\tif len(symbols) == 0 || declContent == \"\" {\n\t\treturn model.Chunk{}\n\t}\n\n\t// Create chunk\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startPos.Line,\n\t\tEndLine:    endPos.Line,\n\t\tContent:    declContent,\n\t\tLanguage:   \"go\",\n\t\tSymbols:    symbols,\n\t\tImports:    imports,\n\t\tTokenCount: util.EstimateTokenCount(declContent),\n\t}\n\n\t// Add symbol definitions to symbol table\n\tfor _, symbol := range symbols {\n\t\tsymbolTable.AddDefinition(symbol, model.SymbolDefinition{\n\t\t\tName:      symbol,\n\t\t\tChunkID:   chunkID,\n\t\t\tFilePath:  filePath,\n\t\t\tStartLine: startPos.Line,\n\t\t\tEndLine:   endPos.Line,\n\t\t\tType:      declType,\n\t\t})\n\t}\n\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "GoChunker.processGenDecl"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e"
      ],
      "token_count": 480
    },
    {
      "id": "3a253d613ea48a85d7d06c67e71c12cf2c55935a0108f58df786189ecd77e733",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 255,
      "end_line": 292,
      "content": "func (c *GoChunker) processImportsSection(fset *token.FileSet, file *ast.File, filePath string, content []byte, packageName string, symbolTable *model.SymbolTable) model.Chunk {\n\t// Find import declarations\n\tvar importDecl *ast.GenDecl\n\tfor _, decl := range file.Decls {\n\t\tif genDecl, ok := decl.(*ast.GenDecl); ok \u0026\u0026 genDecl.Tok == token.IMPORT {\n\t\t\timportDecl = genDecl\n\t\t\tbreak\n\t\t}\n\t}\n\n\tif importDecl == nil {\n\t\treturn model.Chunk{}\n\t}\n\n\t// Get position information\n\tstartPos := fset.Position(importDecl.Pos())\n\tendPos := fset.Position(importDecl.End())\n\n\t// Extract imports content\n\timportsContent := string(content[startPos.Offset:endPos.Offset])\n\n\t// Generate ID for the chunk\n\tchunkID := util.GenerateID(filePath, importsContent)\n\n\t// Create chunk\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startPos.Line,\n\t\tEndLine:    endPos.Line,\n\t\tContent:    importsContent,\n\t\tLanguage:   \"go\",\n\t\tSymbols:    []string{\"imports\"},\n\t\tTokenCount: util.EstimateTokenCount(importsContent),\n\t}\n\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "GoChunker.processImportsSection"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3"
      ],
      "token_count": 260
    },
    {
      "id": "1f6c0b88850fea912d874937caa188304b2fecbc2f2b0b36a30a6d419abb1644",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 295,
      "end_line": 326,
      "content": "func (c *GoChunker) processPackageSection(fset *token.FileSet, file *ast.File, filePath string, content []byte, packageName string, symbolTable *model.SymbolTable) model.Chunk {\n\t// Get position information for package declaration\n\tstartPos := fset.Position(file.Package)\n\tendPos := fset.Position(file.Name.End())\n\n\t// Check for comments before package declaration\n\tvar commentStartPos token.Position\n\tif file.Doc != nil \u0026\u0026 len(file.Doc.List) \u003e 0 {\n\t\tcommentStartPos = fset.Position(file.Doc.Pos())\n\t\tstartPos = commentStartPos\n\t}\n\n\t// Extract package content\n\tpackageContent := string(content[startPos.Offset:endPos.Offset])\n\n\t// Generate ID for the chunk\n\tchunkID := util.GenerateID(filePath, packageContent)\n\n\t// Create chunk\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startPos.Line,\n\t\tEndLine:    endPos.Line,\n\t\tContent:    packageContent,\n\t\tLanguage:   \"go\",\n\t\tSymbols:    []string{packageName},\n\t\tTokenCount: util.EstimateTokenCount(packageContent),\n\t}\n\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "GoChunker.processPackageSection"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec"
      ],
      "token_count": 254
    },
    {
      "id": "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 329,
      "end_line": 339,
      "content": "func (c *GoChunker) extractImports(file *ast.File) []string {\n\tvar imports []string\n\n\tfor _, imp := range file.Imports {\n\t\t// Remove quotes from import path\n\t\tpath := strings.Trim(imp.Path.Value, \"\\\"\")\n\t\timports = append(imports, path)\n\t}\n\n\treturn imports\n}",
      "language": "go",
      "symbols": [
        "GoChunker.extractImports"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab"
      ],
      "token_count": 64
    },
    {
      "id": "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 342,
      "end_line": 353,
      "content": "func (c *GoChunker) collectReferences(fset *token.FileSet, file *ast.File, chunks []model.Chunk, symbolTable *model.SymbolTable) {\n\t// Visitor to find identifier references\n\tvisitor := \u0026referenceVisitor{\n\t\tfset:        fset,\n\t\tsymbolTable: symbolTable,\n\t\tchunks:      chunks,\n\t\tfilePath:    file.Name.Name,\n\t}\n\n\t// Walk the AST to find references\n\tast.Walk(visitor, file)\n}",
      "language": "go",
      "symbols": [
        "GoChunker.collectReferences"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "c71acd5e9db7741c62dee4b68ea59555a32e7f01b079c89a6e35bb5f3c98fa8e",
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e"
      ],
      "token_count": 93
    },
    {
      "id": "c71acd5e9db7741c62dee4b68ea59555a32e7f01b079c89a6e35bb5f3c98fa8e",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 356,
      "end_line": 362,
      "content": "type referenceVisitor struct {\n\tfset         *token.FileSet\n\tsymbolTable  *model.SymbolTable\n\tchunks       []model.Chunk\n\tfilePath     string\n\tcurrentChunk string\n}",
      "language": "go",
      "symbols": [
        "referenceVisitor"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab"
      ],
      "token_count": 41
    },
    {
      "id": "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 365,
      "end_line": 403,
      "content": "func (v *referenceVisitor) Visit(node ast.Node) ast.Visitor {\n\tif node == nil {\n\t\treturn nil\n\t}\n\n\t// Update current chunk based on position\n\tpos := v.fset.Position(node.Pos())\n\tfor _, chunk := range v.chunks {\n\t\tif pos.Line \u003e= chunk.StartLine \u0026\u0026 pos.Line \u003c= chunk.EndLine {\n\t\t\tv.currentChunk = chunk.ID\n\t\t\tbreak\n\t\t}\n\t}\n\n\t// Check for identifier references\n\tif ident, ok := node.(*ast.Ident); ok {\n\t\tname := ident.Name\n\n\t\t// Skip basic types, keywords, etc.\n\t\tif isBasicType(name) || isKeyword(name) {\n\t\t\treturn v\n\t\t}\n\n\t\t// Check if this identifier is a reference to a known symbol\n\t\tif _, exists := v.symbolTable.Definitions[name]; exists {\n\t\t\t// Add reference if we're in a valid chunk\n\t\t\tif v.currentChunk != \"\" {\n\t\t\t\tv.symbolTable.AddReference(name, model.SymbolReference{\n\t\t\t\t\tName:     name,\n\t\t\t\t\tChunkID:  v.currentChunk,\n\t\t\t\t\tFilePath: v.filePath,\n\t\t\t\t\tLine:     pos.Line,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\treturn v\n}",
      "language": "go",
      "symbols": [
        "referenceVisitor.Visit"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "c71acd5e9db7741c62dee4b68ea59555a32e7f01b079c89a6e35bb5f3c98fa8e",
        "a3dc0c9c40c2b2ab10971b3c238e25c242ccc3baaa3fd29a16f1dc27c9907526",
        "820c6ee1ead0d47710c1960064c39544129ed4f91137cc9ec2a06f582cc27e6f",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd"
      ],
      "token_count": 227
    },
    {
      "id": "a3dc0c9c40c2b2ab10971b3c238e25c242ccc3baaa3fd29a16f1dc27c9907526",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 406,
      "end_line": 430,
      "content": "func isBasicType(name string) bool {\n\tbasicTypes := map[string]bool{\n\t\t\"bool\":       true,\n\t\t\"byte\":       true,\n\t\t\"complex128\": true,\n\t\t\"complex64\":  true,\n\t\t\"error\":      true,\n\t\t\"float32\":    true,\n\t\t\"float64\":    true,\n\t\t\"int\":        true,\n\t\t\"int16\":      true,\n\t\t\"int32\":      true,\n\t\t\"int64\":      true,\n\t\t\"int8\":       true,\n\t\t\"rune\":       true,\n\t\t\"string\":     true,\n\t\t\"uint\":       true,\n\t\t\"uint16\":     true,\n\t\t\"uint32\":     true,\n\t\t\"uint64\":     true,\n\t\t\"uint8\":      true,\n\t\t\"uintptr\":    true,\n\t}\n\treturn basicTypes[name]\n}",
      "language": "go",
      "symbols": [
        "isBasicType"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3"
      ],
      "token_count": 134
    },
    {
      "id": "820c6ee1ead0d47710c1960064c39544129ed4f91137cc9ec2a06f582cc27e6f",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 433,
      "end_line": 462,
      "content": "func isKeyword(name string) bool {\n\tkeywords := map[string]bool{\n\t\t\"break\":       true,\n\t\t\"case\":        true,\n\t\t\"chan\":        true,\n\t\t\"const\":       true,\n\t\t\"continue\":    true,\n\t\t\"default\":     true,\n\t\t\"defer\":       true,\n\t\t\"else\":        true,\n\t\t\"fallthrough\": true,\n\t\t\"for\":         true,\n\t\t\"func\":        true,\n\t\t\"go\":          true,\n\t\t\"goto\":        true,\n\t\t\"if\":          true,\n\t\t\"import\":      true,\n\t\t\"interface\":   true,\n\t\t\"map\":         true,\n\t\t\"package\":     true,\n\t\t\"range\":       true,\n\t\t\"return\":      true,\n\t\t\"select\":      true,\n\t\t\"struct\":      true,\n\t\t\"switch\":      true,\n\t\t\"type\":        true,\n\t\t\"var\":         true,\n\t}\n\treturn keywords[name]\n}",
      "language": "go",
      "symbols": [
        "isKeyword"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "72d0e06fd65e32218bd61852a0183f47ba4241db7075d5f190508c7327170fcd",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957"
      ],
      "token_count": 166
    },
    {
      "id": "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 465,
      "end_line": 496,
      "content": "func (c *GoChunker) fallbackChunking(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error) {\n\tlines := strings.Split(string(content), \"\\n\")\n\tvar chunks []model.Chunk\n\n\t// Simple line-based chunking\n\tfor i := 0; i \u003c len(lines); i += options.MaxChunkSize {\n\t\tend := i + options.MaxChunkSize\n\t\tif end \u003e len(lines) {\n\t\t\tend = len(lines)\n\t\t}\n\n\t\tchunkLines := lines[i:end]\n\t\tchunkContent := strings.Join(chunkLines, \"\\n\")\n\n\t\t// Generate ID\n\t\tchunkID := util.GenerateID(filePath, chunkContent)\n\n\t\tchunk := model.Chunk{\n\t\t\tID:         chunkID,\n\t\t\tFilePath:   filePath,\n\t\t\tStartLine:  i + 1,\n\t\t\tEndLine:    end,\n\t\t\tContent:    chunkContent,\n\t\t\tLanguage:   \"go\",\n\t\t\tTokenCount: util.EstimateTokenCount(chunkContent),\n\t\t}\n\n\t\tchunks = append(chunks, chunk)\n\t}\n\n\treturn chunks, nil\n}",
      "language": "go",
      "symbols": [
        "GoChunker.fallbackChunking"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a"
      ],
      "token_count": 207
    },
    {
      "id": "8820ce4a0c1235f0bdec21e391f082990569c6e9c31f48d83ee51abb285b666b",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 499,
      "end_line": 533,
      "content": "func (c *GoChunker) FindRelatedChunks(chunk model.Chunk, symbolTable *model.SymbolTable) []string {\n\trelatedChunks := make(map[string]bool)\n\n\t// For each symbol in this chunk\n\tfor _, symbol := range chunk.Symbols {\n\t\t// Find where this symbol is referenced\n\t\tfor _, ref := range symbolTable.References[symbol] {\n\t\t\tif ref.ChunkID != chunk.ID {\n\t\t\t\trelatedChunks[ref.ChunkID] = true\n\t\t\t}\n\t\t}\n\t}\n\n\t// For each symbol referenced in this chunk\n\tfor symbol, refs := range symbolTable.References {\n\t\tfor _, ref := range refs {\n\t\t\tif ref.ChunkID == chunk.ID {\n\t\t\t\t// Find where this symbol is defined\n\t\t\t\tfor _, def := range symbolTable.Definitions[symbol] {\n\t\t\t\t\tif def.ChunkID != chunk.ID {\n\t\t\t\t\t\trelatedChunks[def.ChunkID] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Convert map to slice\n\tvar result []string\n\tfor id := range relatedChunks {\n\t\tresult = append(result, id)\n\t}\n\n\treturn result\n}",
      "language": "go",
      "symbols": [
        "GoChunker.FindRelatedChunks"
      ],
      "imports": [
        "go/ast",
        "go/parser",
        "go/token",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "7b91c2a028cb6b426c3dbc18b8b385ffcd9906bddb0649d3ba8fd7202a8254c1",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 220
    },
    {
      "id": "97a30f08dfec4bf4271b22fcaad7e4d6b201f925f4bb5c32492abe2502ac4470",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 4,
      "end_line": 12,
      "content": "import (\n\t\"go/ast\"\n\t\"go/parser\"\n\t\"go/token\"\n\t\"strings\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n\t\"github.com/stream-ai/chunk/pkg/util\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
        "7d3cc17ef556759957551ba0a4c09592a655a1895e6af4540b7be8ae4565bba8",
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "d9f1cc1336358065060085ee5b688d2043969c36da70c30d941a43162416a4a3",
        "6271a32a968306565bf22458ed8e3a9339f7250cca77b605201307621daefbdc",
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "37e76145e8c102ff5c680b580c721b7534aa0a88f5e8176945ccac4c1e1d8420",
        "c71acd5e9db7741c62dee4b68ea59555a32e7f01b079c89a6e35bb5f3c98fa8e"
      ],
      "token_count": 35
    },
    {
      "id": "0ea75059f71bdffd9e01d5a17ffc4641d510d615262a4bf60a6efbbdb4730320",
      "file_path": "/workspace/internal/chunker/go.go",
      "start_line": 1,
      "end_line": 2,
      "content": "// internal/chunker/go.go\npackage chunker",
      "language": "go",
      "symbols": [
        "chunker"
      ],
      "related_chunks": [
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "3a90b39e5649272ac81d32af53ce3f051ee9082a09f9cc4a5e55e7047abfb434",
        "afdc215497647e6370b4605ecda70b58d151c3a7287737154c6ae091f2b73262",
        "95aaea4d6b4ad6861e7877a0e5e8f1660469ec06fdf120c23bbcc6fb771e5413",
        "6f3d733a82ca764d8a56e945f5dd1f83651db94633e25ac5b3c1ccb4eee525b3",
        "abdadc7fd600bb59fbd1b52062203b1c8636fa7de6edfe8c9405df70c3caa2e3",
        "c0a230d9572854edb25ce193c7687d895e1940841c2257b11599ac95cf2532f6",
        "9b404e45cb7b221b33b814000b2dc324130ab58c039efab2f0c8e5980e6dc880",
        "f2c935998283b43385d51419613e580f4bdeb685a3d8555a6e3ac0bed2539d20",
        "221c92368f88c4597540e7f744eb0c4be592d3c8d3bd35facbfa91b7f20ff8df"
      ],
      "token_count": 10
    },
    {
      "id": "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 13,
      "end_line": 13,
      "content": "type ShellChunker struct{}",
      "language": "go",
      "symbols": [
        "ShellChunker"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "1974ef5674bd7d5677a55f16b183fb6e07011d699fe56462581b3b5a96e4d846",
        "8868e73bd57e3e2b416c25d2be19dae31229f384e2e9b24bc74ad3ec833b7794",
        "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "9b404e45cb7b221b33b814000b2dc324130ab58c039efab2f0c8e5980e6dc880",
        "e883cd65aa076138a66678231b6dd812b509176f4094e4268491e1cb81d8d198",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 6
    },
    {
      "id": "b5ef4a4e7388a3f8b6c9025743ed8815fabc898056f2777239a446aaacf8daaa",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 16,
      "end_line": 18,
      "content": "func NewShellChunker() *ShellChunker {\n\treturn \u0026ShellChunker{}\n}",
      "language": "go",
      "symbols": [
        "NewShellChunker"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8"
      ],
      "token_count": 16
    },
    {
      "id": "e883cd65aa076138a66678231b6dd812b509176f4094e4268491e1cb81d8d198",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 21,
      "end_line": 23,
      "content": "func (c *ShellChunker) Language() string {\n\treturn \"shell\"\n}",
      "language": "go",
      "symbols": [
        "ShellChunker.Language"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3"
      ],
      "token_count": 15
    },
    {
      "id": "8868e73bd57e3e2b416c25d2be19dae31229f384e2e9b24bc74ad3ec833b7794",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 26,
      "end_line": 28,
      "content": "func (c *ShellChunker) CanHandle(filePath string, language string, framework string) bool {\n\treturn language == \"shell\" || language == \"bash\" || language == \"zsh\"\n}",
      "language": "go",
      "symbols": [
        "ShellChunker.CanHandle"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e"
      ],
      "token_count": 41
    },
    {
      "id": "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 31,
      "end_line": 87,
      "content": "func (c *ShellChunker) Chunk(filePath string, content []byte, symbolTable *model.SymbolTable, options ChunkingOptions) ([]model.Chunk, error) {\n\tlines := bytes.Split(content, []byte(\"\\n\"))\n\tvar chunks []model.Chunk\n\n\t// Find function definitions and block boundaries\n\tvar currentChunk [][]byte\n\tstartLine := 1\n\tinFunction := false\n\n\tfor i, line := range lines {\n\t\tlineStr := string(line)\n\t\ttrimmedLine := strings.TrimSpace(lineStr)\n\n\t\t// Check for function definition\n\t\tif isFunctionStart(trimmedLine) \u0026\u0026 !inFunction {\n\t\t\t// If we have accumulated lines, create a chunk\n\t\t\tif len(currentChunk) \u003e 0 {\n\t\t\t\tchunk := c.createChunk(filePath, currentChunk, startLine, i, symbolTable)\n\t\t\t\tchunks = append(chunks, chunk)\n\t\t\t\tcurrentChunk = [][]byte{}\n\t\t\t}\n\n\t\t\tinFunction = true\n\t\t\tstartLine = i + 1\n\t\t}\n\n\t\t// Check for end of function\n\t\tif inFunction \u0026\u0026 (trimmedLine == \"}\" || strings.HasPrefix(trimmedLine, \"} #\")) {\n\t\t\tcurrentChunk = append(currentChunk, line)\n\t\t\tchunk := c.createChunk(filePath, currentChunk, startLine, i+1, symbolTable)\n\t\t\tchunks = append(chunks, chunk)\n\t\t\tcurrentChunk = [][]byte{}\n\t\t\tinFunction = false\n\t\t\tstartLine = i + 2\n\t\t\tcontinue\n\t\t}\n\n\t\t// Add line to current chunk\n\t\tcurrentChunk = append(currentChunk, line)\n\n\t\t// If we have accumulated many lines outside a function, create a chunk\n\t\tif !inFunction \u0026\u0026 len(currentChunk) \u003e= options.MaxChunkSize {\n\t\t\tchunk := c.createChunk(filePath, currentChunk, startLine, i+1, symbolTable)\n\t\t\tchunks = append(chunks, chunk)\n\t\t\tcurrentChunk = [][]byte{}\n\t\t\tstartLine = i + 2\n\t\t}\n\t}\n\n\t// Add any remaining lines\n\tif len(currentChunk) \u003e 0 {\n\t\tchunk := c.createChunk(filePath, currentChunk, startLine, len(lines), symbolTable)\n\t\tchunks = append(chunks, chunk)\n\t}\n\n\treturn chunks, nil\n}",
      "language": "go",
      "symbols": [
        "ShellChunker.Chunk"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "da9cfd0036107f4cafb0e5f6aecb6ca8af9e25286c7278d1deb6842abe0f4897",
        "4ad044d454f7a6988c501966ab1ffc627b9c13ae8843157ffaabda41bc8522b8",
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957"
      ],
      "token_count": 435
    },
    {
      "id": "1974ef5674bd7d5677a55f16b183fb6e07011d699fe56462581b3b5a96e4d846",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 90,
      "end_line": 121,
      "content": "func (c *ShellChunker) createChunk(filePath string, lines [][]byte, startLine, endLine int, symbolTable *model.SymbolTable) model.Chunk {\n\tcontent := string(bytes.Join(lines, []byte(\"\\n\")))\n\tchunkID := util.GenerateID(filePath, content)\n\n\t// Extract function names as symbols\n\tsymbols := c.extractFunctions(content)\n\n\tchunk := model.Chunk{\n\t\tID:         chunkID,\n\t\tFilePath:   filePath,\n\t\tStartLine:  startLine,\n\t\tEndLine:    endLine,\n\t\tContent:    content,\n\t\tLanguage:   \"shell\",\n\t\tSymbols:    symbols,\n\t\tTokenCount: util.EstimateTokenCount(content),\n\t}\n\n\t// Add symbols to symbol table\n\tfor _, symbol := range symbols {\n\t\tsymbolTable.AddDefinition(symbol, model.SymbolDefinition{\n\t\t\tName:      symbol,\n\t\t\tChunkID:   chunkID,\n\t\t\tFilePath:  filePath,\n\t\t\tStartLine: startLine,\n\t\t\tEndLine:   endLine,\n\t\t\tType:      \"function\",\n\t\t})\n\t}\n\n\treturn chunk\n}",
      "language": "go",
      "symbols": [
        "ShellChunker.createChunk"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939"
      ],
      "token_count": 212
    },
    {
      "id": "4ad044d454f7a6988c501966ab1ffc627b9c13ae8843157ffaabda41bc8522b8",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 124,
      "end_line": 136,
      "content": "func isFunctionStart(line string) bool {\n\t// Match patterns like:\n\t// function name() {\n\t// function name {\n\t// name() {\n\tif strings.HasPrefix(line, \"function \") \u0026\u0026 (strings.Contains(line, \"()\") || strings.HasSuffix(line, \"{\")) {\n\t\treturn true\n\t}\n\n\t// Check for name() { pattern\n\tfuncPattern := regexp.MustCompile(`^\\s*\\w+\\s*\\(\\s*\\)\\s*\\{`)\n\treturn funcPattern.MatchString(line)\n}",
      "language": "go",
      "symbols": [
        "isFunctionStart"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "d8d095101dc36c1b5d2aec41d585aa83c253a6a5328b10ebb0caf4f93125cd9d",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67"
      ],
      "token_count": 94
    },
    {
      "id": "9b404e45cb7b221b33b814000b2dc324130ab58c039efab2f0c8e5980e6dc880",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 139,
      "end_line": 174,
      "content": "func (c *ShellChunker) extractFunctions(content string) []string {\n\tvar symbols []string\n\n\t// Look for function definitions: function name() or name()\n\tfuncPattern1 := regexp.MustCompile(`function\\s+(\\w+)\\s*\\(\\s*\\)`)\n\tfuncPattern2 := regexp.MustCompile(`function\\s+(\\w+)\\s*\\{`)\n\tfuncPattern3 := regexp.MustCompile(`\\b(\\w+)\\s*\\(\\s*\\)\\s*\\{`)\n\n\tmatches1 := funcPattern1.FindAllStringSubmatch(content, -1)\n\tfor _, match := range matches1 {\n\t\tsymbols = append(symbols, match[1])\n\t}\n\n\tmatches2 := funcPattern2.FindAllStringSubmatch(content, -1)\n\tfor _, match := range matches2 {\n\t\tsymbols = append(symbols, match[1])\n\t}\n\n\tmatches3 := funcPattern3.FindAllStringSubmatch(content, -1)\n\tfor _, match := range matches3 {\n\t\tsymbols = append(symbols, match[1])\n\t}\n\n\t// Deduplicate\n\tsymbolMap := make(map[string]bool)\n\tfor _, symbol := range symbols {\n\t\tsymbolMap[symbol] = true\n\t}\n\n\tvar uniqueSymbols []string\n\tfor symbol := range symbolMap {\n\t\tuniqueSymbols = append(uniqueSymbols, symbol)\n\t}\n\n\treturn uniqueSymbols\n}",
      "language": "go",
      "symbols": [
        "ShellChunker.extractFunctions"
      ],
      "imports": [
        "bytes",
        "regexp",
        "strings",
        "github.com/stream-ai/chunk/internal/model",
        "github.com/stream-ai/chunk/pkg/util"
      ],
      "related_chunks": [
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67"
      ],
      "token_count": 251
    },
    {
      "id": "aa831b3a0e59047614886fe16895ab63b7988cfc46756966eb5f5ff15c94f536",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 3,
      "end_line": 10,
      "content": "import (\n\t\"bytes\"\n\t\"regexp\"\n\t\"strings\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n\t\"github.com/stream-ai/chunk/pkg/util\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "88cbc4d90d62cc00ca952bd9025120b62e588bca817c0c9ecc2a8435ab0e14a1",
        "fdb1f23bce90631f17fa74d2b0d88f854c094873963a4ae4f6811f4cd8d07180",
        "6e5e3b37c5ec1058d47932afd1c69c72c95ee4911bb9844b41fbcd679f1d8444",
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
        "ab6a12cc27423cf7c4ce6319e4690570c11834b584ca823e57b97037dbb2e377",
        "ecbdaa484fb1e9fc1124cd853cfaa7754d14e58c06845c9d4b400f46438d50b6",
        "4896ea19215d09926b75bd3933b1d19f7cce49ac8325a45d8bace61469744eaf",
        "1974ef5674bd7d5677a55f16b183fb6e07011d699fe56462581b3b5a96e4d846",
        "7d3b1d6cb78828c6019f0b9cb11fb8d802f584bf1406158cc435669011dd46b8",
        "88c61e0521babf1fd15c7fb5e9fddd32831139c7c5b33adcf5164661ccdea268"
      ],
      "token_count": 31
    },
    {
      "id": "4472ae9143909ce9dc6eb8505662360903eae75afb4cdaddf395ebaacda674b4",
      "file_path": "/workspace/internal/chunker/shell.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package chunker",
      "language": "go",
      "symbols": [
        "chunker"
      ],
      "related_chunks": [
        "e883cd65aa076138a66678231b6dd812b509176f4094e4268491e1cb81d8d198",
        "afdc215497647e6370b4605ecda70b58d151c3a7287737154c6ae091f2b73262",
        "9b404e45cb7b221b33b814000b2dc324130ab58c039efab2f0c8e5980e6dc880",
        "1f6c0b88850fea912d874937caa188304b2fecbc2f2b0b36a30a6d419abb1644",
        "4178ac8ecc15b5d09ee1583d217de33b7f7559460ba1ca0070e9f9e780f17655",
        "1096182d4bdc474e791a665ad3867261f835dcb6fd57719423cef578982a66ae",
        "e51924cdf33e4e29ef261042a876895b9e7ada6472a1e6643bdf27d5c3167828",
        "b8c130963e30a8fe51d100fa377052e4e73e1ce1ae7677f6dbc6d0d95545ddf4",
        "4ad044d454f7a6988c501966ab1ffc627b9c13ae8843157ffaabda41bc8522b8",
        "3b5496436b83e3a8aa9087b68bdd227742f2d68b9f1cad8727971c97be52f6e8"
      ],
      "token_count": 3
    },
    {
      "id": "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
      "file_path": "/workspace/internal/detector/detector.go",
      "start_line": 4,
      "end_line": 7,
      "content": "type LanguageDetector interface {\n\t// DetectLanguage determines the programming language of a file\n\tDetectLanguage(filePath string, content []byte) string\n}",
      "language": "go",
      "symbols": [
        "LanguageDetector"
      ],
      "related_chunks": [
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424"
      ],
      "token_count": 39
    },
    {
      "id": "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
      "file_path": "/workspace/internal/detector/detector.go",
      "start_line": 10,
      "end_line": 13,
      "content": "type FrameworkDetector interface {\n\t// DetectFramework determines the framework used in a file\n\tDetectFramework(filePath string, content []byte, language string) string\n}",
      "language": "go",
      "symbols": [
        "FrameworkDetector"
      ],
      "related_chunks": [
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225"
      ],
      "token_count": 42
    },
    {
      "id": "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
      "file_path": "/workspace/internal/detector/detector.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package detector",
      "language": "go",
      "symbols": [
        "detector"
      ],
      "related_chunks": [
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391"
      ],
      "token_count": 4
    },
    {
      "id": "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 9,
      "end_line": 12,
      "content": "type DefaultFrameworkDetector struct {\n\t// frameworkPatterns maps frameworks to byte patterns to look for in the content\n\tframeworkPatterns map[string][]string\n}",
      "language": "go",
      "symbols": [
        "DefaultFrameworkDetector"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8"
      ],
      "token_count": 40
    },
    {
      "id": "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 15,
      "end_line": 24,
      "content": "func NewDefaultFrameworkDetector() *DefaultFrameworkDetector {\n\tdetector := \u0026DefaultFrameworkDetector{\n\t\tframeworkPatterns: make(map[string][]string),\n\t}\n\n\t// Initialize pattern mappings\n\tdetector.registerPatterns()\n\n\treturn detector\n}",
      "language": "go",
      "symbols": [
        "NewDefaultFrameworkDetector"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc"
      ],
      "token_count": 58
    },
    {
      "id": "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 27,
      "end_line": 93,
      "content": "func (d *DefaultFrameworkDetector) registerPatterns() {\n\t// JavaScript/TypeScript frameworks\n\td.frameworkPatterns[\"react\"] = []string{\n\t\t\"import React\",\n\t\t\"from 'react'\",\n\t\t\"from \\\"react\\\"\",\n\t\t\"React.Component\",\n\t\t\"extends Component\",\n\t\t\"useState\",\n\t\t\"useEffect\",\n\t\t\"createContext\",\n\t}\n\n\td.frameworkPatterns[\"angular\"] = []string{\n\t\t\"@angular/core\",\n\t\t\"@Component\",\n\t\t\"@NgModule\",\n\t\t\"@Injectable\",\n\t\t\"moduleId\",\n\t\t\"platformBrowserDynamic\",\n\t}\n\n\td.frameworkPatterns[\"vue\"] = []string{\n\t\t\"import Vue\",\n\t\t\"from 'vue'\",\n\t\t\"from \\\"vue\\\"\",\n\t\t\"new Vue\",\n\t\t\"createApp\",\n\t\t\"\u003ctemplate\u003e\",\n\t\t\"Vue.component\",\n\t\t\"defineComponent\",\n\t}\n\n\td.frameworkPatterns[\"svelte\"] = []string{\n\t\t\"\u003cscript\u003e\",\n\t\t\"\u003cstyle\u003e\",\n\t\t\"export let\",\n\t\t\"svelte:\",\n\t}\n\n\td.frameworkPatterns[\"nextjs\"] = []string{\n\t\t\"import { NextPage }\",\n\t\t\"GetServerSideProps\",\n\t\t\"GetStaticPaths\",\n\t\t\"GetStaticProps\",\n\t\t\"next/router\",\n\t\t\"next/link\",\n\t\t\"NextApiRequest\",\n\t\t\"NextApiResponse\",\n\t}\n\n\t// Mobile frameworks\n\td.frameworkPatterns[\"flutter\"] = []string{\n\t\t\"package:flutter\",\n\t\t\"extends StatelessWidget\",\n\t\t\"extends StatefulWidget\",\n\t\t\"BuildContext\",\n\t\t\"MaterialApp\",\n\t}\n\n\td.frameworkPatterns[\"reactnative\"] = []string{\n\t\t\"from 'react-native'\",\n\t\t\"import { View, Text } from 'react-native'\",\n\t\t\"StyleSheet.create\",\n\t\t\"AppRegistry\",\n\t}\n}",
      "language": "go",
      "symbols": [
        "DefaultFrameworkDetector.registerPatterns"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca"
      ],
      "token_count": 320
    },
    {
      "id": "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 96,
      "end_line": 151,
      "content": "func (d *DefaultFrameworkDetector) DetectFramework(filePath string, content []byte, language string) string {\n\t// Check file extension first\n\text := strings.ToLower(filepath.Ext(filePath))\n\tif ext == \".jsx\" || ext == \".tsx\" {\n\t\treturn \"react\"\n\t}\n\tif ext == \".vue\" {\n\t\treturn \"vue\"\n\t}\n\tif ext == \".svelte\" {\n\t\treturn \"svelte\"\n\t}\n\n\t// No need to check for frameworks in non-JS/TS files\n\tif language != \"javascript\" \u0026\u0026 language != \"typescript\" \u0026\u0026 language != \"jsx\" \u0026\u0026 language != \"tsx\" \u0026\u0026 language != \"dart\" {\n\t\treturn \"\"\n\t}\n\n\t// Check config files\n\tbasename := strings.ToLower(filepath.Base(filePath))\n\tif basename == \"package.json\" {\n\t\tcontentStr := string(content)\n\n\t\t// Check for dependencies in package.json\n\t\tif strings.Contains(contentStr, \"\\\"react\\\"\") \u0026\u0026 !strings.Contains(contentStr, \"\\\"react-native\\\"\") {\n\t\t\treturn \"react\"\n\t\t}\n\t\tif strings.Contains(contentStr, \"\\\"@angular/core\\\"\") {\n\t\t\treturn \"angular\"\n\t\t}\n\t\tif strings.Contains(contentStr, \"\\\"vue\\\"\") {\n\t\t\treturn \"vue\"\n\t\t}\n\t\tif strings.Contains(contentStr, \"\\\"svelte\\\"\") {\n\t\t\treturn \"svelte\"\n\t\t}\n\t\tif strings.Contains(contentStr, \"\\\"next\\\"\") {\n\t\t\treturn \"nextjs\"\n\t\t}\n\t\tif strings.Contains(contentStr, \"\\\"react-native\\\"\") {\n\t\t\treturn \"reactnative\"\n\t\t}\n\t}\n\n\t// Check for patterns in the content\n\tcontentStr := string(content)\n\tfor framework, patterns := range d.frameworkPatterns {\n\t\tfor _, pattern := range patterns {\n\t\t\tif strings.Contains(contentStr, pattern) {\n\t\t\t\treturn framework\n\t\t\t}\n\t\t}\n\t}\n\n\treturn \"\"\n}",
      "language": "go",
      "symbols": [
        "DefaultFrameworkDetector.DetectFramework"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45"
      ],
      "token_count": 367
    },
    {
      "id": "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 3,
      "end_line": 6,
      "content": "import (\n\t\"path/filepath\"\n\t\"strings\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45"
      ],
      "token_count": 9
    },
    {
      "id": "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
      "file_path": "/workspace/internal/detector/framework.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package detector",
      "language": "go",
      "symbols": [
        "detector"
      ],
      "related_chunks": [
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea"
      ],
      "token_count": 4
    },
    {
      "id": "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 10,
      "end_line": 16,
      "content": "type DefaultLanguageDetector struct {\n\t// extensionMap maps file extensions to languages\n\textensionMap map[string]string\n\n\t// specialFilesMap maps specific filenames to languages\n\tspecialFilesMap map[string]string\n}",
      "language": "go",
      "symbols": [
        "DefaultLanguageDetector"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4"
      ],
      "token_count": 53
    },
    {
      "id": "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 19,
      "end_line": 30,
      "content": "func NewDefaultLanguageDetector() *DefaultLanguageDetector {\n\tdetector := \u0026DefaultLanguageDetector{\n\t\textensionMap:    make(map[string]string),\n\t\tspecialFilesMap: make(map[string]string),\n\t}\n\n\t// Initialize extension mappings\n\tdetector.registerExtensions()\n\tdetector.registerSpecialFiles()\n\n\treturn detector\n}",
      "language": "go",
      "symbols": [
        "NewDefaultLanguageDetector"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf"
      ],
      "token_count": 77
    },
    {
      "id": "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 33,
      "end_line": 84,
      "content": "func (d *DefaultLanguageDetector) registerExtensions() {\n\t// Programming languages\n\td.extensionMap[\".go\"] = \"go\"\n\td.extensionMap[\".js\"] = \"javascript\"\n\td.extensionMap[\".jsx\"] = \"jsx\"\n\td.extensionMap[\".ts\"] = \"typescript\"\n\td.extensionMap[\".tsx\"] = \"tsx\"\n\td.extensionMap[\".py\"] = \"python\"\n\td.extensionMap[\".rb\"] = \"ruby\"\n\td.extensionMap[\".java\"] = \"java\"\n\td.extensionMap[\".kt\"] = \"kotlin\"\n\td.extensionMap[\".kts\"] = \"kotlin\"\n\td.extensionMap[\".swift\"] = \"swift\"\n\td.extensionMap[\".c\"] = \"c\"\n\td.extensionMap[\".h\"] = \"c\"\n\td.extensionMap[\".cpp\"] = \"cpp\"\n\td.extensionMap[\".cc\"] = \"cpp\"\n\td.extensionMap[\".cxx\"] = \"cpp\"\n\td.extensionMap[\".hpp\"] = \"cpp\"\n\td.extensionMap[\".cs\"] = \"csharp\"\n\td.extensionMap[\".rs\"] = \"rust\"\n\td.extensionMap[\".php\"] = \"php\"\n\td.extensionMap[\".dart\"] = \"dart\"\n\n\t// Shell scripts and config files\n\td.extensionMap[\".sh\"] = \"shell\"\n\td.extensionMap[\".bash\"] = \"shell\"\n\td.extensionMap[\".zsh\"] = \"shell\"\n\td.extensionMap[\".fish\"] = \"shell\"\n\td.extensionMap[\".ps1\"] = \"powershell\"\n\td.extensionMap[\".bat\"] = \"batch\"\n\td.extensionMap[\".cmd\"] = \"batch\"\n\n\t// Web/markup languages\n\td.extensionMap[\".html\"] = \"html\"\n\td.extensionMap[\".css\"] = \"css\"\n\td.extensionMap[\".scss\"] = \"scss\"\n\td.extensionMap[\".less\"] = \"less\"\n\td.extensionMap[\".vue\"] = \"vue\"\n\td.extensionMap[\".svelte\"] = \"svelte\"\n\n\t// Data/config formats\n\td.extensionMap[\".json\"] = \"json\"\n\td.extensionMap[\".yaml\"] = \"yaml\"\n\td.extensionMap[\".yml\"] = \"yaml\"\n\td.extensionMap[\".toml\"] = \"toml\"\n\td.extensionMap[\".md\"] = \"markdown\"\n\td.extensionMap[\".markdown\"] = \"markdown\"\n\td.extensionMap[\".ini\"] = \"ini\"\n\td.extensionMap[\".conf\"] = \"conf\"\n\td.extensionMap[\".env\"] = \"env\"\n}",
      "language": "go",
      "symbols": [
        "DefaultLanguageDetector.registerExtensions"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7"
      ],
      "token_count": 405
    },
    {
      "id": "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 86,
      "end_line": 99,
      "content": "func (d *DefaultLanguageDetector) registerSpecialFiles() {\n\td.specialFilesMap[\"dockerfile\"] = \"dockerfile\"\n\td.specialFilesMap[\"makefile\"] = \"makefile\"\n\td.specialFilesMap[\"jenkinsfile\"] = \"jenkinsfile\"\n\td.specialFilesMap[\"gemfile\"] = \"ruby\"\n\td.specialFilesMap[\"rakefile\"] = \"ruby\"\n\td.specialFilesMap[\"cmakelists.txt\"] = \"cmake\"\n\td.specialFilesMap[\".gitignore\"] = \"gitignore\"\n\td.specialFilesMap[\".dockerignore\"] = \"dockerignore\"\n\td.specialFilesMap[\".bashrc\"] = \"shell\"\n\td.specialFilesMap[\".zshrc\"] = \"shell\"\n\td.specialFilesMap[\".bash_profile\"] = \"shell\"\n\td.specialFilesMap[\".profile\"] = \"shell\"\n}",
      "language": "go",
      "symbols": [
        "DefaultLanguageDetector.registerSpecialFiles"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da"
      ],
      "token_count": 148
    },
    {
      "id": "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 102,
      "end_line": 152,
      "content": "func (d *DefaultLanguageDetector) DetectLanguage(filePath string, content []byte) string {\n\text := strings.ToLower(filepath.Ext(filePath))\n\tbaseName := strings.ToLower(filepath.Base(filePath))\n\n\t// Special case for Dockerfile (which has no extension)\n\tif baseName == \"dockerfile\" {\n\t\treturn \"dockerfile\"\n\t}\n\n\t// Check if the file starts with a shebang for shell scripts\n\tif len(content) \u003e 2 \u0026\u0026 content[0] == '#' \u0026\u0026 content[1] == '!' {\n\t\tfirstLine := string(bytes.SplitN(content, []byte(\"\\n\"), 2)[0])\n\t\tif strings.Contains(firstLine, \"/bin/bash\") || strings.Contains(firstLine, \"/bin/sh\") {\n\t\t\treturn \"shell\"\n\t\t}\n\t\tif strings.Contains(firstLine, \"/bin/zsh\") {\n\t\t\treturn \"shell\"\n\t\t}\n\t\tif strings.Contains(firstLine, \"python\") {\n\t\t\treturn \"python\"\n\t\t}\n\t\tif strings.Contains(firstLine, \"ruby\") || strings.Contains(firstLine, \"ruby\") {\n\t\t\treturn \"ruby\"\n\t\t}\n\t\tif strings.Contains(firstLine, \"node\") || strings.Contains(firstLine, \"nodejs\") {\n\t\t\treturn \"javascript\"\n\t\t}\n\t\t// If we found a shebang but don't recognize it, mark as shell anyway\n\t\treturn \"shell\"\n\t}\n\n\t// Check extension mappings\n\tif language, ok := d.extensionMap[ext]; ok {\n\t\treturn language\n\t}\n\n\t// Check special filenames\n\tif language, ok := d.specialFilesMap[baseName]; ok {\n\t\treturn language\n\t}\n\n\t// Check for special filenames with extensions\n\tfor specialFile, language := range d.specialFilesMap {\n\t\tif strings.HasPrefix(baseName, specialFile+\".\") {\n\t\t\treturn language\n\t\t}\n\t}\n\n\t// Default fallback\n\treturn \"unknown\"\n}",
      "language": "go",
      "symbols": [
        "DefaultLanguageDetector.DetectLanguage"
      ],
      "imports": [
        "bytes",
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225"
      ],
      "token_count": 370
    },
    {
      "id": "6466cb19a76f0d60e774992164243ae4b855c307d27cdfec97058297943eca43",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 3,
      "end_line": 7,
      "content": "import (\n\t\"bytes\"\n\t\"path/filepath\"\n\t\"strings\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "816cfb0da759ff8beddd660e3f6946eb7668203fa0d08ff46995904619d8cef7",
        "b120cece19a969c61da0971f3c058d21fd164e65592214e6a86c200a36287124",
        "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "444e0b152438b37489fed0704f6d68ac31d38a3dfc951a439b47b51f69c8fbea",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "25176726604ad408069741ccb4ad45d04e79ccb785344ebd7e3b2c161cd355da",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b"
      ],
      "token_count": 11
    },
    {
      "id": "26c0dc9f944ca277fddff9390151e079e59e1fdc5f93523e7bbc969a84307dbf",
      "file_path": "/workspace/internal/detector/language.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package detector",
      "language": "go",
      "symbols": [
        "detector"
      ],
      "related_chunks": [
        "1954be0c857bc38789c0bf62ce45cb948c375286329bd2ca23539ebe84cce431",
        "34dfcf3b44674653c9cfd146c5db5d7a276bdf1267847f0f010f50dc755affb8",
        "895fba2521af4050fe9232478711a3cebb77efe3886d744ef177efeedd63ac45",
        "f83c29156eacddb58a4b1431a84a96bff7578ecfb0464958e2cfa5715dfa6a1b",
        "4007c6b52542f4492d8a5ab273c0a1bb23facd131cd8e4ee32d8178fa6dd6225",
        "aed9b11f2c886dc443feb5dace6c995056471fad7befdab03a172afb2e081424",
        "727796833089bf2193328aa8e586b4d15cc4425a3adc06b873b8b5d55105e391",
        "96d5a80a058c3d6bf465785d2d326ace9accd54b4c659951b84ec923a6ad3eca",
        "c6006201c73055e284ee7abdd39960c7a763f625409d9b83f223ecd2efa2dcdc",
        "2bf2edb3a011f6113f4d2be544b3a9d841508ce6ffbf650413520979063e99c4"
      ],
      "token_count": 4
    },
    {
      "id": "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
      "file_path": "/workspace/internal/model/chunk.go",
      "start_line": 4,
      "end_line": 16,
      "content": "type Chunk struct {\n\tID            string   `json:\"id\"`\n\tFilePath      string   `json:\"file_path\"`\n\tStartLine     int      `json:\"start_line\"`\n\tEndLine       int      `json:\"end_line\"`\n\tContent       string   `json:\"content\"`\n\tLanguage      string   `json:\"language\"`\n\tFramework     string   `json:\"framework,omitempty\"`\n\tSymbols       []string `json:\"symbols,omitempty\"`\n\tImports       []string `json:\"imports,omitempty\"`\n\tRelatedChunks []string `json:\"related_chunks,omitempty\"`\n\tTokenCount    int      `json:\"token_count,omitempty\"`\n}",
      "language": "go",
      "symbols": [
        "Chunk"
      ],
      "related_chunks": [
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 134
    },
    {
      "id": "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
      "file_path": "/workspace/internal/model/chunk.go",
      "start_line": 19,
      "end_line": 21,
      "content": "type ChunkResult struct {\n\tChunks []Chunk `json:\"chunks\"`\n}",
      "language": "go",
      "symbols": [
        "ChunkResult"
      ],
      "related_chunks": [
        "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab"
      ],
      "token_count": 14
    },
    {
      "id": "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
      "file_path": "/workspace/internal/model/chunk.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package model",
      "language": "go",
      "symbols": [
        "model"
      ],
      "related_chunks": [
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd"
      ],
      "token_count": 3
    },
    {
      "id": "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 10,
      "end_line": 10,
      "content": "type RelationStrength int",
      "language": "go",
      "symbols": [
        "RelationStrength"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847"
      ],
      "token_count": 6
    },
    {
      "id": "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 12,
      "end_line": 21,
      "content": "const (\n\t// RelationWeak represents a weak relationship (same package, etc.)\n\tRelationWeak RelationStrength = 1\n\n\t// RelationMedium represents a medium-strength relationship (import relation, etc.)\n\tRelationMedium RelationStrength = 5\n\n\t// RelationStrong represents a strong relationship (direct call, type-method, etc.)\n\tRelationStrong RelationStrength = 10\n)",
      "language": "go",
      "symbols": [
        "RelationWeak",
        "RelationMedium",
        "RelationStrong"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec"
      ],
      "token_count": 90
    },
    {
      "id": "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 24,
      "end_line": 31,
      "content": "type SymbolDefinition struct {\n\tName      string\n\tChunkID   string\n\tFilePath  string\n\tStartLine int\n\tEndLine   int\n\tType      string // \"function\", \"interface\", \"type\", \"const\", \"var\", etc.\n}",
      "language": "go",
      "symbols": [
        "SymbolDefinition"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a"
      ],
      "token_count": 47
    },
    {
      "id": "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 34,
      "end_line": 39,
      "content": "type SymbolReference struct {\n\tName     string\n\tChunkID  string\n\tFilePath string\n\tLine     int\n}",
      "language": "go",
      "symbols": [
        "SymbolReference"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee"
      ],
      "token_count": 24
    },
    {
      "id": "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 43,
      "end_line": 47,
      "content": "type SymbolTable struct {\n\tDefinitions map[string][]SymbolDefinition\n\tReferences  map[string][]SymbolReference\n\tChunks      map[string]Chunk // Map of chunk ID to chunk\n}",
      "language": "go",
      "symbols": [
        "SymbolTable"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48"
      ],
      "token_count": 42
    },
    {
      "id": "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 50,
      "end_line": 56,
      "content": "func NewSymbolTable() *SymbolTable {\n\treturn \u0026SymbolTable{\n\t\tDefinitions: make(map[string][]SymbolDefinition),\n\t\tReferences:  make(map[string][]SymbolReference),\n\t\tChunks:      make(map[string]Chunk),\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewSymbolTable"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 51
    },
    {
      "id": "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 59,
      "end_line": 61,
      "content": "func (st *SymbolTable) AddDefinition(name string, def SymbolDefinition) {\n\tst.Definitions[name] = append(st.Definitions[name], def)\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.AddDefinition"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d"
      ],
      "token_count": 33
    },
    {
      "id": "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 64,
      "end_line": 66,
      "content": "func (st *SymbolTable) AddReference(name string, ref SymbolReference) {\n\tst.References[name] = append(st.References[name], ref)\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.AddReference"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 32
    },
    {
      "id": "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 69,
      "end_line": 71,
      "content": "func (st *SymbolTable) AddChunk(chunk Chunk) {\n\tst.Chunks[chunk.ID] = chunk\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.AddChunk"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 19
    },
    {
      "id": "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 74,
      "end_line": 77,
      "content": "func (st *SymbolTable) GetChunk(id string) (Chunk, bool) {\n\tchunk, exists := st.Chunks[id]\n\treturn chunk, exists\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.GetChunk"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df"
      ],
      "token_count": 28
    },
    {
      "id": "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 80,
      "end_line": 86,
      "content": "func (st *SymbolTable) AllChunks() []Chunk {\n\tchunks := make([]Chunk, 0, len(st.Chunks))\n\tfor _, chunk := range st.Chunks {\n\t\tchunks = append(chunks, chunk)\n\t}\n\treturn chunks\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.AllChunks"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939"
      ],
      "token_count": 44
    },
    {
      "id": "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 89,
      "end_line": 101,
      "content": "func (st *SymbolTable) FindDefinitionsByType(defType string) []SymbolDefinition {\n\tvar result []SymbolDefinition\n\n\tfor _, defs := range st.Definitions {\n\t\tfor _, def := range defs {\n\t\t\tif def.Type == defType {\n\t\t\t\tresult = append(result, def)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.FindDefinitionsByType"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957"
      ],
      "token_count": 68
    },
    {
      "id": "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 104,
      "end_line": 270,
      "content": "func (st *SymbolTable) FindRelatedChunks(chunk Chunk) []string {\n\t// Map of chunk IDs to their relation strength\n\trelatedChunks := make(map[string]RelationStrength)\n\n\t// Package name for context\n\tpackageName := extractPackageName(chunk.FilePath)\n\n\t// 1. Find direct symbol reference relationships\n\t// -----------------------------------------------\n\n\t// Symbols defined in this chunk and referenced elsewhere\n\tfor _, symbol := range chunk.Symbols {\n\t\tfor _, ref := range st.References[symbol] {\n\t\t\tif ref.ChunkID != chunk.ID {\n\t\t\t\trelatedChunks[ref.ChunkID] = max(relatedChunks[ref.ChunkID], RelationStrong)\n\t\t\t}\n\t\t}\n\t}\n\n\t// Symbols referenced in this chunk but defined elsewhere\n\tfor symbol := range st.Definitions {\n\t\t// Check if this symbol is referenced in the chunk\n\t\tisReferenced := false\n\t\tfor _, ref := range st.References[symbol] {\n\t\t\tif ref.ChunkID == chunk.ID {\n\t\t\t\tisReferenced = true\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tif isReferenced {\n\t\t\t// Find all definitions of this symbol\n\t\t\tfor _, def := range st.Definitions[symbol] {\n\t\t\t\tif def.ChunkID != chunk.ID {\n\t\t\t\t\trelatedChunks[def.ChunkID] = max(relatedChunks[def.ChunkID], RelationStrong)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Find method-type relationships (specific to Go)\n\t// --------------------------------------------------\n\n\t// If this chunk defines methods, relate to the type definition\n\tfor _, symbol := range chunk.Symbols {\n\t\tif strings.Contains(symbol, \".\") {\n\t\t\t// This looks like a method, e.g. \"Type.Method\"\n\t\t\tparts := strings.Split(symbol, \".\")\n\t\t\tif len(parts) == 2 {\n\t\t\t\ttypeName := parts[0]\n\t\t\t\t// Find the type definition\n\t\t\t\tfor _, def := range st.Definitions[typeName] {\n\t\t\t\t\tif def.ChunkID != chunk.ID {\n\t\t\t\t\t\trelatedChunks[def.ChunkID] = max(relatedChunks[def.ChunkID], RelationStrong)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// If this chunk defines a type, relate to its methods\n\tfor _, symbol := range chunk.Symbols {\n\t\tmethodPattern := symbol + \".\"\n\t\tfor methodSymbol := range st.Definitions {\n\t\t\tif strings.HasPrefix(methodSymbol, methodPattern) {\n\t\t\t\tfor _, methodDef := range st.Definitions[methodSymbol] {\n\t\t\t\t\tif methodDef.ChunkID != chunk.ID {\n\t\t\t\t\t\trelatedChunks[methodDef.ChunkID] = max(relatedChunks[methodDef.ChunkID], RelationStrong)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 3. Find interface-implementation relationships\n\t// ---------------------------------------------\n\t// This is a simplified approach without full type checking\n\n\t// If this chunk defines an interface\n\tfor _, symbol := range chunk.Symbols {\n\t\t// Look for definitions that seem to be interfaces (type name followed by \"interface\")\n\t\tfor _, def := range st.Definitions[symbol] {\n\t\t\tif def.Type == \"interface\" \u0026\u0026 def.ChunkID == chunk.ID {\n\t\t\t\t// Find potential implementers by looking for method name patterns\n\t\t\t\t// For each chunk that contains method definitions...\n\t\t\t\tfor methodSymbol := range st.Definitions {\n\t\t\t\t\tif strings.Contains(methodSymbol, \".\") {\n\t\t\t\t\t\tmethodName := strings.Split(methodSymbol, \".\")[1]\n\n\t\t\t\t\t\t// Check if this method is mentioned in the interface\n\t\t\t\t\t\tif strings.Contains(chunk.Content, methodName) {\n\t\t\t\t\t\t\tfor _, methodDef := range st.Definitions[methodSymbol] {\n\t\t\t\t\t\t\t\tif methodDef.ChunkID != chunk.ID {\n\t\t\t\t\t\t\t\t\trelatedChunks[methodDef.ChunkID] = max(relatedChunks[methodDef.ChunkID], RelationMedium)\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 4. Find import relationships\n\t// ----------------------------\n\n\tfor _, imp := range chunk.Imports {\n\t\t// Get the package name from the import path\n\t\tpkgName := extractPackageNameFromImport(imp)\n\n\t\t// Find all chunks that belong to this package\n\t\tfor _, otherChunk := range st.AllChunks() {\n\t\t\totherPkgName := extractPackageName(otherChunk.FilePath)\n\t\t\tif pkgName == otherPkgName \u0026\u0026 otherChunk.ID != chunk.ID {\n\t\t\t\trelatedChunks[otherChunk.ID] = max(relatedChunks[otherChunk.ID], RelationMedium)\n\t\t\t}\n\t\t}\n\t}\n\n\t// 5. Same-package relationship (weakest)\n\t// -------------------------------------\n\n\tif packageName != \"\" {\n\t\tfor _, otherChunk := range st.AllChunks() {\n\t\t\totherPkgName := extractPackageName(otherChunk.FilePath)\n\t\t\tif packageName == otherPkgName \u0026\u0026 otherChunk.ID != chunk.ID {\n\t\t\t\t// Only add if we don't already have a stronger relationship\n\t\t\t\tif _, exists := relatedChunks[otherChunk.ID]; !exists {\n\t\t\t\t\trelatedChunks[otherChunk.ID] = RelationWeak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 6. Sort by relationship strength and return top N\n\t// ------------------------------------------------\n\n\t// Convert to a slice of (ChunkID, Strength) pairs\n\ttype relationPair struct {\n\t\tchunkID  string\n\t\tstrength RelationStrength\n\t}\n\n\tpairs := make([]relationPair, 0, len(relatedChunks))\n\tfor id, strength := range relatedChunks {\n\t\tpairs = append(pairs, relationPair{id, strength})\n\t}\n\n\t// Sort by strength (descending)\n\tsort.Slice(pairs, func(i, j int) bool {\n\t\treturn pairs[i].strength \u003e pairs[j].strength\n\t})\n\n\t// Take top N (limit to 10 to avoid overwhelming the vector database)\n\tmaxRelations := 10\n\tif len(pairs) \u003e maxRelations {\n\t\tpairs = pairs[:maxRelations]\n\t}\n\n\t// Extract chunk IDs\n\tresult := make([]string, len(pairs))\n\tfor i, pair := range pairs {\n\t\tresult[i] = pair.chunkID\n\t}\n\n\treturn result\n}",
      "language": "go",
      "symbols": [
        "SymbolTable.FindRelatedChunks"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df"
      ],
      "token_count": 1279
    },
    {
      "id": "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 275,
      "end_line": 278,
      "content": "func extractPackageName(filePath string) string {\n\tdir := filepath.Dir(filePath)\n\treturn filepath.Base(dir)\n}",
      "language": "go",
      "symbols": [
        "extractPackageName"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8"
      ],
      "token_count": 27
    },
    {
      "id": "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 281,
      "end_line": 285,
      "content": "func extractPackageNameFromImport(importPath string) string {\n\t// For import paths like \"github.com/user/repo/pkg/subpkg\",\n\t// we want to extract \"subpkg\"\n\treturn filepath.Base(importPath)\n}",
      "language": "go",
      "symbols": [
        "extractPackageNameFromImport"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847"
      ],
      "token_count": 47
    },
    {
      "id": "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 288,
      "end_line": 293,
      "content": "func max(a, b RelationStrength) RelationStrength {\n\tif a \u003e b {\n\t\treturn a\n\t}\n\treturn b\n}",
      "language": "go",
      "symbols": [
        "max"
      ],
      "imports": [
        "path/filepath",
        "sort",
        "strings"
      ],
      "related_chunks": [
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 22
    },
    {
      "id": "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 3,
      "end_line": 7,
      "content": "import (\n\t\"path/filepath\"\n\t\"sort\"\n\t\"strings\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 11
    },
    {
      "id": "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
      "file_path": "/workspace/internal/model/symbol.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package model",
      "language": "go",
      "symbols": [
        "model"
      ],
      "related_chunks": [
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3"
      ],
      "token_count": 3
    },
    {
      "id": "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 10,
      "end_line": 13,
      "content": "type Formatter interface {\n\t// Format writes the chunks to the given writer\n\tFormat(w io.Writer, result model.ChunkResult) error\n}",
      "language": "go",
      "symbols": [
        "Formatter"
      ],
      "imports": [
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "d2b482f3eedb5a9ed7f82fca623168eae0e2cd94e5d4f5ba919716a0d17da920",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f"
      ],
      "token_count": 32
    },
    {
      "id": "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 16,
      "end_line": 18,
      "content": "type FormatterRegistry struct {\n\tformatters map[string]Formatter\n}",
      "language": "go",
      "symbols": [
        "FormatterRegistry"
      ],
      "imports": [
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "d2b482f3eedb5a9ed7f82fca623168eae0e2cd94e5d4f5ba919716a0d17da920",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 16
    },
    {
      "id": "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 21,
      "end_line": 25,
      "content": "func NewFormatterRegistry() *FormatterRegistry {\n\treturn \u0026FormatterRegistry{\n\t\tformatters: make(map[string]Formatter),\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewFormatterRegistry"
      ],
      "imports": [
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389"
      ],
      "token_count": 30
    },
    {
      "id": "d2b482f3eedb5a9ed7f82fca623168eae0e2cd94e5d4f5ba919716a0d17da920",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 28,
      "end_line": 30,
      "content": "func (fr *FormatterRegistry) Register(name string, formatter Formatter) {\n\tfr.formatters[name] = formatter\n}",
      "language": "go",
      "symbols": [
        "FormatterRegistry.Register"
      ],
      "imports": [
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8"
      ],
      "token_count": 27
    },
    {
      "id": "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 33,
      "end_line": 36,
      "content": "func (fr *FormatterRegistry) Get(name string) (Formatter, bool) {\n\tformatter, exists := fr.formatters[name]\n\treturn formatter, exists\n}",
      "language": "go",
      "symbols": [
        "FormatterRegistry.Get"
      ],
      "imports": [
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a"
      ],
      "token_count": 33
    },
    {
      "id": "1a5f730f07255e01c78026401d9ae05c7f2dd3ac5c388e6d2691b3536ebbfb88",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 3,
      "end_line": 7,
      "content": "import (\n\t\"io\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "7fba8e931f7f6b84946276f6d1d7336d24cb3c5f58c9ba7babce2c458a3e9f10",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "821db5609a09bb43071ca559897879ecd71e38a193367c7c658e3698809f74f7",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5"
      ],
      "token_count": 15
    },
    {
      "id": "821db5609a09bb43071ca559897879ecd71e38a193367c7c658e3698809f74f7",
      "file_path": "/workspace/internal/output/formatter.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package output",
      "language": "go",
      "symbols": [
        "output"
      ],
      "related_chunks": [
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "d0a0e58efa0bf6dcda2d3ac6aeaad6d38748695436f0dc2f936f04d875f60417",
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
        "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5",
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "d2b482f3eedb5a9ed7f82fca623168eae0e2cd94e5d4f5ba919716a0d17da920",
        "7fba8e931f7f6b84946276f6d1d7336d24cb3c5f58c9ba7babce2c458a3e9f10",
        "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254"
      ],
      "token_count": 3
    },
    {
      "id": "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
      "file_path": "/workspace/internal/output/json.go",
      "start_line": 11,
      "end_line": 14,
      "content": "type JSONFormatter struct {\n\t// Pretty determines if the output should be pretty-printed\n\tPretty bool\n}",
      "language": "go",
      "symbols": [
        "JSONFormatter"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "3e06aee53f53b9c2c818aaf4aedc40cd762c341c832e2df74df66f84510ab389",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683"
      ],
      "token_count": 25
    },
    {
      "id": "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
      "file_path": "/workspace/internal/output/json.go",
      "start_line": 17,
      "end_line": 21,
      "content": "func NewJSONFormatter(pretty bool) *JSONFormatter {\n\treturn \u0026JSONFormatter{\n\t\tPretty: pretty,\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewJSONFormatter"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "2edc5cbb97cdeb40add17b05261313625dbcd36c4c58abdf2d5d9c2fdcf2a57f",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683"
      ],
      "token_count": 24
    },
    {
      "id": "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
      "file_path": "/workspace/internal/output/json.go",
      "start_line": 24,
      "end_line": 30,
      "content": "func (f *JSONFormatter) Format(w io.Writer, result model.ChunkResult) error {\n\tencoder := json.NewEncoder(w)\n\tif f.Pretty {\n\t\tencoder.SetIndent(\"\", \"  \")\n\t}\n\treturn encoder.Encode(result)\n}",
      "language": "go",
      "symbols": [
        "JSONFormatter.Format"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "1c9f11c85d570e6c63b1fb559496167664995c91019f54b6574a5487ff8f2b3d",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "270d2ed12da21e39164e828d5dc7b42863a278da9b4ca7b350981e254f880683"
      ],
      "token_count": 47
    },
    {
      "id": "d0a0e58efa0bf6dcda2d3ac6aeaad6d38748695436f0dc2f936f04d875f60417",
      "file_path": "/workspace/internal/output/json.go",
      "start_line": 3,
      "end_line": 8,
      "content": "import (\n\t\"encoding/json\"\n\t\"io\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "807c5f555ba62770bd5a467c33f5c4d683e168aeeb76967c2e9dda0fb6f4634d",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5"
      ],
      "token_count": 19
    },
    {
      "id": "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5",
      "file_path": "/workspace/internal/output/json.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package output",
      "language": "go",
      "symbols": [
        "output"
      ],
      "related_chunks": [
        "1a5f730f07255e01c78026401d9ae05c7f2dd3ac5c388e6d2691b3536ebbfb88",
        "d0a0e58efa0bf6dcda2d3ac6aeaad6d38748695436f0dc2f936f04d875f60417",
        "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254",
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "821db5609a09bb43071ca559897879ecd71e38a193367c7c658e3698809f74f7",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026"
      ],
      "token_count": 3
    },
    {
      "id": "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
      "file_path": "/workspace/internal/output/jsonl.go",
      "start_line": 11,
      "end_line": 11,
      "content": "type JSONLinesFormatter struct{}",
      "language": "go",
      "symbols": [
        "JSONLinesFormatter"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254",
        "363cf8e6754925f8e917f06d3b599d12dc7bfaefc8efcb6e168d457cd63a20ec",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "e8a2fa80a157dc29e790ace8aedc2a84a325edd2b6f766d492564e806e684ae8",
        "12fd29e844aea2ebaa0b4b172702490847220db9f9fe333d28122d7d59fc7847",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 8
    },
    {
      "id": "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
      "file_path": "/workspace/internal/output/jsonl.go",
      "start_line": 14,
      "end_line": 16,
      "content": "func NewJSONLinesFormatter() *JSONLinesFormatter {\n\treturn \u0026JSONLinesFormatter{}\n}",
      "language": "go",
      "symbols": [
        "NewJSONLinesFormatter"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "fda99b87ef2ae21e27cbafcd34a3e47ac9a64079cd538c917efa86e4ec7553ab",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "fcb898c894a0809b62360e5501cfe4290406ddef50cbb4702239df09838a87a3",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "ad9bf03e1fa2bd34ae99714fe24be9e578631037c207e350ee187fa012d2a72a",
        "65f70c24821c5aff764bcac5465208d6aff80ec6feeeeab7806b018c1c103eee",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "cef328b7f3f6306807e8749cf6c633a125bce461e7fd79cb7f793d7239efb457"
      ],
      "token_count": 20
    },
    {
      "id": "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254",
      "file_path": "/workspace/internal/output/jsonl.go",
      "start_line": 19,
      "end_line": 33,
      "content": "func (f *JSONLinesFormatter) Format(w io.Writer, result model.ChunkResult) error {\n\tfor _, chunk := range result.Chunks {\n\t\tchunkBytes, err := json.Marshal(chunk)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif _, err := w.Write(chunkBytes); err != nil {\n\t\t\treturn err\n\t\t}\n\t\tif _, err := w.Write([]byte(\"\\n\")); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\treturn nil\n}",
      "language": "go",
      "symbols": [
        "JSONLinesFormatter.Format"
      ],
      "imports": [
        "encoding/json",
        "io",
        "github.com/stream-ai/chunk/internal/model"
      ],
      "related_chunks": [
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "3cfd18270d6e4481c148dec7b29787ff5b501f901763566d6fb146a3d3ffecbe",
        "174207a75437c25278ef5b97797a24b226da912c09157f19af732e9b4ad9210e",
        "c94ee7adbc1ff0667bcbc80b8bb89138e892591700ab5818591ba28e5f7c01c8",
        "57f36e14ac4a2c4c8c43d6ad1c5d9e579f683e586f2a1ee379ca40a42078db7d",
        "7ef6372360d9adf6511bf83d24551e3dcedc868bb4fd4e1998d41d69fd6d50cd",
        "e47d86c5a2d75bff3d14af42e24c31b6b9ac75755a77d43ff97de65cb74be1df",
        "e664d3d739bd85438de515338e27ae63e8a32df51a58468cf393b3e109688939",
        "22ef64c00221af24cf6d7863f85cd224ce5e48b4ac2be3df49ec67c0452a4e48",
        "ac906ef6474a3bd36570c78e4ff4d0d1782bcef1efcc47feb776a5c23842b957"
      ],
      "token_count": 87
    },
    {
      "id": "807c5f555ba62770bd5a467c33f5c4d683e168aeeb76967c2e9dda0fb6f4634d",
      "file_path": "/workspace/internal/output/jsonl.go",
      "start_line": 3,
      "end_line": 8,
      "content": "import (\n\t\"encoding/json\"\n\t\"io\"\n\n\t\"github.com/stream-ai/chunk/internal/model\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "ebb180c8545ff549d583cb42251c9062b920b0cda409d046767c0495da469254",
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
        "6cfaec7efb41d50479fac22a9cacf2ba08e642989f6701e59a2146950ac50026",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "2e59eb1aa332a941c4308c9b21c200d920227ac90121666c5d4256728753adf8",
        "7a7949e8950ae725715c825c3258a3759bcb15c3286ad3eac2b624d58ba2deb5",
        "7fba8e931f7f6b84946276f6d1d7336d24cb3c5f58c9ba7babce2c458a3e9f10",
        "1a5f730f07255e01c78026401d9ae05c7f2dd3ac5c388e6d2691b3536ebbfb88"
      ],
      "token_count": 19
    },
    {
      "id": "7fba8e931f7f6b84946276f6d1d7336d24cb3c5f58c9ba7babce2c458a3e9f10",
      "file_path": "/workspace/internal/output/jsonl.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package output",
      "language": "go",
      "symbols": [
        "output"
      ],
      "related_chunks": [
        "9030e9cf8496b4957e9d01fe4dbaa778d3ac07dc1dfe1a1e3574d4a2ea359c6f",
        "d2db79ffed2f156ed95f44d6f91bb448259028491c5a100a06e1181a814ac5a7",
        "f5cad628f023fd56ca938da98ea1c6d39561f3ab1218ba60d4b40c59e3e14739",
        "d0a0e58efa0bf6dcda2d3ac6aeaad6d38748695436f0dc2f936f04d875f60417",
        "40cb6adb703207096be89b976bd5339e85c96274833429c5561c8c82c64afa06",
        "821db5609a09bb43071ca559897879ecd71e38a193367c7c658e3698809f74f7",
        "48c99a48b5c1e9479f3d7250f9f63a9f71bfcd16a4611bf3201e70403c6395b5",
        "1a5f730f07255e01c78026401d9ae05c7f2dd3ac5c388e6d2691b3536ebbfb88",
        "5a8aabd32ac4432241b23b18b91aefd15131d4c7673961b3a6d87e50b449cf60",
        "2ed58b848627be9dfb4d021630d95b78a8df6e3b7767dd2c433ec0815ea79787"
      ],
      "token_count": 3
    },
    {
      "id": "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
      "file_path": "/workspace/main.go",
      "start_line": 11,
      "end_line": 18,
      "content": "func main() {\n\trootCmd := cmd.NewRootCommand()\n\n\tif err := rootCmd.Execute(); err != nil {\n\t\tfmt.Fprintf(os.Stderr, \"Error: %v\\n\", err)\n\t\tos.Exit(1)\n\t}\n}",
      "language": "go",
      "symbols": [
        "main"
      ],
      "imports": [
        "fmt",
        "os",
        "github.com/stream-ai/chunk/cmd"
      ],
      "related_chunks": [
        "811b46e0eceb9ed0b00c6a223dfbc844e2605bf2396a01f1d702e0e7bc91c35c",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "6728ed6fd2b5857e05a8c25a1559adaeef2aea435bbf724733f688868f525c0a",
        "9e3760a729c1098ef431742cfa84b08e63eb315c6c0619d5e5e7dd0de6ad7311",
        "e32d46a2e5b260edf0067e4a6f40fe63de954aca36093cd70a8249bb8eebec77",
        "ccd821a37b14fd9a47b53f41543ecd7d7a84ccff74a9ac87d701a4360209c249",
        "dccdbadb068877b188df8be3a134a275a120c0191c102299b3af3c7fa9c9bae2",
        "3fcb01a24046490e4a095d621ba2913736c5549ebdf08a5789366b2eb4fe015f",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19"
      ],
      "token_count": 38
    },
    {
      "id": "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
      "file_path": "/workspace/main.go",
      "start_line": 4,
      "end_line": 9,
      "content": "import (\n\t\"fmt\"\n\t\"os\"\n\n\t\"github.com/stream-ai/chunk/cmd\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "fb560cf778f12364c4d3c2871a40939c46efff64e59b1880ef0d14d968ea4bd9",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1"
      ],
      "token_count": 14
    },
    {
      "id": "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b",
      "file_path": "/workspace/main.go",
      "start_line": 1,
      "end_line": 2,
      "content": "// main.go\npackage main",
      "language": "go",
      "symbols": [
        "main"
      ],
      "related_chunks": [
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "ca1448d5763ea7967b73309f046abbaf75fb89b63cb0f70fb35a90b7fb7d61a4",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "e675fd15c7e9617c252aeacb0cafec524beeab2145c4f46aa5a7210b445f0e52",
        "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "061ad57e6398fc50bb370549709d0a71cfc762010da6499bb0f2efbb2501fe19",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1"
      ],
      "token_count": 5
    },
    {
      "id": "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 12,
      "end_line": 15,
      "content": "type Manager struct {\n\tignores map[string]*ignore.GitIgnore\n\trootDir string\n}",
      "language": "go",
      "symbols": [
        "Manager"
      ],
      "imports": [
        "os",
        "path/filepath",
        "strings",
        "github.com/sabhiram/go-gitignore"
      ],
      "related_chunks": [
        "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d",
        "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1",
        "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26",
        "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20",
        "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8"
      ],
      "token_count": 19
    },
    {
      "id": "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 18,
      "end_line": 23,
      "content": "func NewManager(rootDir string) *Manager {\n\treturn \u0026Manager{\n\t\tignores: make(map[string]*ignore.GitIgnore),\n\t\trootDir: rootDir,\n\t}\n}",
      "language": "go",
      "symbols": [
        "NewManager"
      ],
      "imports": [
        "os",
        "path/filepath",
        "strings",
        "github.com/sabhiram/go-gitignore"
      ],
      "related_chunks": [
        "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
        "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8",
        "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d",
        "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1",
        "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20"
      ],
      "token_count": 33
    },
    {
      "id": "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 26,
      "end_line": 43,
      "content": "func (m *Manager) LoadIgnores() error {\n\treturn filepath.Walk(m.rootDir, func(path string, info os.FileInfo, err error) error {\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\n\t\tif !info.IsDir() \u0026\u0026 filepath.Base(path) == \".gitignore\" {\n\t\t\tdir := filepath.Dir(path)\n\t\t\tgitignore, err := ignore.CompileIgnoreFile(path)\n\t\t\tif err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\t\t\tm.ignores[dir] = gitignore\n\t\t}\n\n\t\treturn nil\n\t})\n}",
      "language": "go",
      "symbols": [
        "Manager.LoadIgnores"
      ],
      "imports": [
        "os",
        "path/filepath",
        "strings",
        "github.com/sabhiram/go-gitignore"
      ],
      "related_chunks": [
        "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
        "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20",
        "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8",
        "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26",
        "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1"
      ],
      "token_count": 99
    },
    {
      "id": "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 46,
      "end_line": 67,
      "content": "func (m *Manager) IsIgnored(path string) bool {\n\t// Start from the file's directory and walk up to the root\n\tdir := filepath.Dir(path)\n\tfor {\n\t\tif gitignore, exists := m.ignores[dir]; exists {\n\t\t\trelPath, err := filepath.Rel(dir, path)\n\t\t\tif err == nil \u0026\u0026 gitignore.MatchesPath(relPath) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\n\t\t// Stop if we've reached the root or beyond\n\t\tif dir == m.rootDir || !strings.HasPrefix(dir, m.rootDir) {\n\t\t\tbreak\n\t\t}\n\n\t\t// Move up one directory\n\t\tdir = filepath.Dir(dir)\n\t}\n\n\treturn false\n}",
      "language": "go",
      "symbols": [
        "Manager.IsIgnored"
      ],
      "imports": [
        "os",
        "path/filepath",
        "strings",
        "github.com/sabhiram/go-gitignore"
      ],
      "related_chunks": [
        "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
        "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8",
        "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d",
        "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26",
        "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20"
      ],
      "token_count": 127
    },
    {
      "id": "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 3,
      "end_line": 9,
      "content": "import (\n\t\"os\"\n\t\"path/filepath\"\n\t\"strings\"\n\n\tignore \"github.com/sabhiram/go-gitignore\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1",
        "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20",
        "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
        "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d",
        "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26"
      ],
      "token_count": 22
    },
    {
      "id": "55f01a7ab1a6db6b43789d2a52f14b8a7be298c1e6fc25c116d680bda7e11a20",
      "file_path": "/workspace/pkg/gitignore/manager.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package gitignore",
      "language": "go",
      "symbols": [
        "gitignore"
      ],
      "related_chunks": [
        "a1290580d91f5897f5203a2c42ea8136c3e2709d7c326d51bbd3690309077d26",
        "2664baccfd68cee83c9dec21a22fcccc197896facf062072227479c4150dd5e1",
        "212211e5f4f0f27566d95d1e0eb56ca27aa8d83c3ab7abd85058cff6c100c4a8",
        "4dcb6926f9f2b61ee56b805d9b829397cebd8e42f04ecca4a0f666667f42daca",
        "432bead8f9b241e06df67647e4be7ab174c0289824c9d40dd350007ccddfed9d"
      ],
      "token_count": 4
    },
    {
      "id": "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
      "file_path": "/workspace/pkg/util/fileutil.go",
      "start_line": 9,
      "end_line": 44,
      "content": "func IsBinaryFile(filename string) bool {\n\text := strings.ToLower(filepath.Ext(filename))\n\tbinaryExts := map[string]bool{\n\t\t\".exe\":   true,\n\t\t\".dll\":   true,\n\t\t\".so\":    true,\n\t\t\".dylib\": true,\n\t\t\".bin\":   true,\n\t\t\".obj\":   true,\n\t\t\".o\":     true,\n\t\t\".a\":     true,\n\t\t\".lib\":   true,\n\t\t\".png\":   true,\n\t\t\".jpg\":   true,\n\t\t\".jpeg\":  true,\n\t\t\".gif\":   true,\n\t\t\".bmp\":   true,\n\t\t\".tiff\":  true,\n\t\t\".ico\":   true,\n\t\t\".zip\":   true,\n\t\t\".tar\":   true,\n\t\t\".gz\":    true,\n\t\t\".bz2\":   true,\n\t\t\".7z\":    true,\n\t\t\".rar\":   true,\n\t\t\".pdf\":   true,\n\t\t\".doc\":   true,\n\t\t\".docx\":  true,\n\t\t\".xls\":   true,\n\t\t\".xlsx\":  true,\n\t\t\".ppt\":   true,\n\t\t\".pptx\":  true,\n\t}\n\n\treturn binaryExts[ext]\n}",
      "language": "go",
      "symbols": [
        "IsBinaryFile"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 168
    },
    {
      "id": "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
      "file_path": "/workspace/pkg/util/fileutil.go",
      "start_line": 47,
      "end_line": 61,
      "content": "func ShouldSkipDirectory(dirName string) bool {\n\tdirsToSkip := map[string]bool{\n\t\t\".git\":         true,\n\t\t\"node_modules\": true,\n\t\t\"vendor\":       true,\n\t\t\"dist\":         true,\n\t\t\"build\":        true,\n\t\t\"target\":       true,\n\t\t\"cdk.out\":      true,\n\t\t\".next\":        true,\n\t\t\".angular\":     true,\n\t}\n\n\treturn dirsToSkip[dirName]\n}",
      "language": "go",
      "symbols": [
        "ShouldSkipDirectory"
      ],
      "imports": [
        "path/filepath",
        "strings"
      ],
      "related_chunks": [
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 82
    },
    {
      "id": "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
      "file_path": "/workspace/pkg/util/fileutil.go",
      "start_line": 3,
      "end_line": 6,
      "content": "import (\n\t\"path/filepath\"\n\t\"strings\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95"
      ],
      "token_count": 9
    },
    {
      "id": "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
      "file_path": "/workspace/pkg/util/fileutil.go",
      "start_line": 1,
      "end_line": 1,
      "content": "package util",
      "language": "go",
      "symbols": [
        "util"
      ],
      "related_chunks": [
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e"
      ],
      "token_count": 3
    },
    {
      "id": "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
      "file_path": "/workspace/pkg/util/idgen.go",
      "start_line": 10,
      "end_line": 16,
      "content": "func GenerateID(inputs ...string) string {\n\thasher := sha256.New()\n\tfor _, input := range inputs {\n\t\thasher.Write([]byte(input))\n\t}\n\treturn hex.EncodeToString(hasher.Sum(nil))\n}",
      "language": "go",
      "symbols": [
        "GenerateID"
      ],
      "imports": [
        "crypto/sha256",
        "encoding/hex"
      ],
      "related_chunks": [
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95"
      ],
      "token_count": 44
    },
    {
      "id": "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd",
      "file_path": "/workspace/pkg/util/idgen.go",
      "start_line": 19,
      "end_line": 22,
      "content": "func EstimateTokenCount(content string) int {\n\t// A very rough estimate - about 1 token per 4 characters for code\n\treturn len(content) / 4\n}",
      "language": "go",
      "symbols": [
        "EstimateTokenCount"
      ],
      "imports": [
        "crypto/sha256",
        "encoding/hex"
      ],
      "related_chunks": [
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67"
      ],
      "token_count": 35
    },
    {
      "id": "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
      "file_path": "/workspace/pkg/util/idgen.go",
      "start_line": 4,
      "end_line": 7,
      "content": "import (\n\t\"crypto/sha256\"\n\t\"encoding/hex\"\n)",
      "language": "go",
      "symbols": [
        "imports"
      ],
      "related_chunks": [
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 10
    },
    {
      "id": "d365ff29b16edfa9e8e775af96c4841371e1405dce9737779f1af7604ce31e95",
      "file_path": "/workspace/pkg/util/idgen.go",
      "start_line": 1,
      "end_line": 2,
      "content": "// pkg/util/idgen.go\npackage util",
      "language": "go",
      "symbols": [
        "util"
      ],
      "related_chunks": [
        "2482c6a072af98649f30ed6754e74f42743e4ade78ed2a37282323689c11054e",
        "68dcb1c727cc28cc2e30d2f76090fea5b3d7c4a532d96e563fadb9a4c3bce7f2",
        "6155e9fd715e4f6357ec5a352630f2ab251f4c4041258b96afe19d10b01bf341",
        "d079c97345a8218a22256dc98b2495a7f74eb8574a2227b1897b39f7e031ac67",
        "21a5a2a75edf3a098f4d926ab6f4b2f8c867a98eac50f952bce034874babafa6",
        "7ba3235d47ce74f0cbd58222ec103c69890c23e73d7ec074634501e88df04ed7",
        "cae1eb18c9830b742db5706a4518a9cbe9a6d17dfd97b3c7d5d8b4c35ee85fcd"
      ],
      "token_count": 8
    },
    {
      "id": "a791a484c1d78e941c08516d842db46090a33bff9aae52af137c544c9d535f5c",
      "file_path": "/workspace/test.ts",
      "start_line": 1,
      "end_line": 2,
      "content": "function helloWorld() { console.log('Hello'); }\n",
      "language": "ts",
      "symbols": [
        "helloWorld"
      ],
      "related_chunks": [
        "610f8573e570e15714aeea218eee6ea03921a6b7fc78bf264217c12c9cad72b0",
        "f778d8efde6279b8169fef73eee91d60e0d99eb0283a964a49525ac6379c0f15",
        "4095f1f800740640ddd4e43bf9f67d33bf6d98eb88baed8e87d33be60bac8a65",
        "7b58560a782f6fd67ed0551d457a84c82430d4c9bb60f5534315685ec123f60d",
        "ac693b1827ee6d1874478e948f3b23903c611650800b0ebdd73a821b14ccf57d",
        "6285b5548e9450f72802c52f381b30778b7262afda4e7f3b125ea6fc95bda0c1",
        "c2ef4f5b4849ec6837b41dc80511bf35d35689db1afea06ea88ab266c3b09ad2",
        "d05fef345fd190a9fa143f987cf604588b2a5d16a13948d1e5593f269227b8c6",
        "2b8a3125dc1e10c72138c6a175c628253a36dfba6612693f8c89fd0a5ed2b470",
        "9adf33a1acfca6b5f1e5ba9fe604c597b925fad51a8d7be63bc6bfcb066bd78b"
      ],
      "token_count": 12
    }
  ]
}
